<?xml version="1.0"?>
<doc>
    <assembly>
        <name>mscorlib.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.MscorlibDelegates">
            <summary>Contains custom delegates used for the stubs and shims of mscorlib</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimCollection`1">
            <summary>Shim type of System.Collections.ObjectModel.Collection`1</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.#ctor(System.Collections.ObjectModel.Collection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AddT0">
            <summary>Sets the shim of Collection`1.Add(!0 item)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.AddT0">
            <summary>Sets the shim of Collection`1.Add(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.Clear">
            <summary>Sets the shim of Collection`1.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ClearItems">
            <summary>Sets the shim of Collection`1.ClearItems()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ContainsT0">
            <summary>Sets the shim of Collection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of Collection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.CountGet">
            <summary>Sets the shim of Collection`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of Collection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.IndexOfT0">
            <summary>Sets the shim of Collection`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.InsertInt32T0">
            <summary>Sets the shim of Collection`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.InsertItemInt32T0">
            <summary>Sets the shim of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of Collection`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of Collection`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of Collection`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of Collection`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of Collection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ItemSetInt32T0">
            <summary>Sets the shim of Collection`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of Collection`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of Collection`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ItemsGet">
            <summary>Sets the shim of Collection`1.get_Items()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of Collection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.RemoveItemInt32">
            <summary>Sets the shim of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.RemoveT0">
            <summary>Sets the shim of Collection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SetItemInt32T0">
            <summary>Sets the shim of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of Collection`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of Collection`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Collection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIListAddObject">
            <summary>Sets the shim of Collection`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of Collection`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of Collection`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of Collection`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of Collection`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.Clear">
            <summary>Sets the shim of Collection`1.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ClearItems">
            <summary>Sets the shim of Collection`1.ClearItems()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.Constructor">
            <summary>Sets the shim of Collection`1.Collection`1()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ConstructorIListOfT0">
            <summary>Sets the shim of Collection`1.Collection`1(IList`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ContainsT0">
            <summary>Sets the shim of Collection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of Collection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.CountGet">
            <summary>Sets the shim of Collection`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.GetEnumerator">
            <summary>Sets the shim of Collection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IndexOfT0">
            <summary>Sets the shim of Collection`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.InsertInt32T0">
            <summary>Sets the shim of Collection`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.InsertItemInt32T0">
            <summary>Sets the shim of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IsCompatibleObjectObject">
            <summary>Sets the shim of Collection`1.IsCompatibleObject(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of Collection`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of Collection`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of Collection`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of Collection`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ItemGetInt32">
            <summary>Sets the shim of Collection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ItemSetInt32T0">
            <summary>Sets the shim of Collection`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of Collection`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of Collection`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ItemsGet">
            <summary>Sets the shim of Collection`1.get_Items()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.RemoveAtInt32">
            <summary>Sets the shim of Collection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.RemoveItemInt32">
            <summary>Sets the shim of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.RemoveT0">
            <summary>Sets the shim of Collection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SetItemInt32T0">
            <summary>Sets the shim of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of Collection`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of Collection`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Collection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIListAddObject">
            <summary>Sets the shim of Collection`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of Collection`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of Collection`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of Collection`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of Collection`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2">
            <summary>Shim type of System.Collections.ObjectModel.KeyedCollection`2</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.#ctor(System.Collections.ObjectModel.KeyedCollection{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AddKeyT0T1">
            <summary>Sets the shim of KeyedCollection`2.AddKey(!0 key, !1 item)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.AddKeyT0T1">
            <summary>Sets the shim of KeyedCollection`2.AddKey(!0 key, !1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ChangeItemKeyT1T0">
            <summary>Sets the shim of KeyedCollection`2.ChangeItemKey(!1 item, !0 newKey)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ClearItems">
            <summary>Sets the shim of KeyedCollection`2.ClearItems()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ComparerGet">
            <summary>Sets the shim of KeyedCollection`2.get_Comparer()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ContainsItemT1">
            <summary>Sets the shim of KeyedCollection`2.ContainsItem(!1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ContainsT0">
            <summary>Sets the shim of KeyedCollection`2.Contains(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.CreateDictionary">
            <summary>Sets the shim of KeyedCollection`2.CreateDictionary()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.DictionaryGet">
            <summary>Sets the shim of KeyedCollection`2.get_Dictionary()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.InsertItemInt32T1">
            <summary>Sets the shim of KeyedCollection`2.InsertItem(Int32 index, !1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ItemGetT0">
            <summary>Sets the shim of KeyedCollection`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.RemoveItemInt32">
            <summary>Sets the shim of KeyedCollection`2.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.RemoveKeyT0">
            <summary>Sets the shim of KeyedCollection`2.RemoveKey(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.RemoveT0">
            <summary>Sets the shim of KeyedCollection`2.Remove(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.SetItemInt32T1">
            <summary>Sets the shim of KeyedCollection`2.SetItem(Int32 index, !1 item)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.Generic.ICollection{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.Generic.IEnumerable{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.Generic.IList{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.Generic.IReadOnlyCollection{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.Generic.IReadOnlyList{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ChangeItemKeyT1T0">
            <summary>Sets the shim of KeyedCollection`2.ChangeItemKey(!1 item, !0 newKey)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ClearItems">
            <summary>Sets the shim of KeyedCollection`2.ClearItems()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ComparerGet">
            <summary>Sets the shim of KeyedCollection`2.get_Comparer()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Constructor">
            <summary>Sets the shim of KeyedCollection`2.KeyedCollection`2()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ConstructorIEqualityComparerOfT0">
            <summary>Sets the shim of KeyedCollection`2.KeyedCollection`2(IEqualityComparer`1&lt;!0&gt; comparer)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ConstructorIEqualityComparerOfT0Int32">
            <summary>Sets the shim of KeyedCollection`2.KeyedCollection`2(IEqualityComparer`1&lt;!0&gt; comparer, Int32 dictionaryCreationThreshold)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ContainsItemT1">
            <summary>Sets the shim of KeyedCollection`2.ContainsItem(!1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ContainsT0">
            <summary>Sets the shim of KeyedCollection`2.Contains(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.CreateDictionary">
            <summary>Sets the shim of KeyedCollection`2.CreateDictionary()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.DictionaryGet">
            <summary>Sets the shim of KeyedCollection`2.get_Dictionary()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.InsertItemInt32T1">
            <summary>Sets the shim of KeyedCollection`2.InsertItem(Int32 index, !1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ItemGetT0">
            <summary>Sets the shim of KeyedCollection`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.RemoveItemInt32">
            <summary>Sets the shim of KeyedCollection`2.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.RemoveKeyT0">
            <summary>Sets the shim of KeyedCollection`2.RemoveKey(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.RemoveT0">
            <summary>Sets the shim of KeyedCollection`2.Remove(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.SetItemInt32T1">
            <summary>Sets the shim of KeyedCollection`2.SetItem(Int32 index, !1 item)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1">
            <summary>Shim type of System.Collections.ObjectModel.ReadOnlyCollection`1</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ContainsT0">
            <summary>Sets the shim of ReadOnlyCollection`1.Contains(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.CountGet">
            <summary>Sets the shim of ReadOnlyCollection`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ReadOnlyCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.IndexOfT0">
            <summary>Sets the shim of ReadOnlyCollection`1.IndexOf(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemSystemCollectionsGenericIListTgetInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemSystemCollectionsGenericIListTsetInt32T0">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemsGet">
            <summary>Sets the shim of ReadOnlyCollection`1.get_Items()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsGenericICollectionTAddT0">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsGenericICollectionTClear">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsGenericICollectionTRemoveT0">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsGenericIListTInsertInt32T0">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.Insert(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsGenericIListTRemoveAtInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListAddObject">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListClear">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ConstructorIListOfT0">
            <summary>Sets the shim of ReadOnlyCollection`1.ReadOnlyCollection`1(IList`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ContainsT0">
            <summary>Sets the shim of ReadOnlyCollection`1.Contains(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.CountGet">
            <summary>Sets the shim of ReadOnlyCollection`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.GetEnumerator">
            <summary>Sets the shim of ReadOnlyCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IndexOfT0">
            <summary>Sets the shim of ReadOnlyCollection`1.IndexOf(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IsCompatibleObjectObject">
            <summary>Sets the shim of ReadOnlyCollection`1.IsCompatibleObject(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemGetInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemSystemCollectionsGenericIListTgetInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemSystemCollectionsGenericIListTsetInt32T0">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemsGet">
            <summary>Sets the shim of ReadOnlyCollection`1.get_Items()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsGenericICollectionTAddT0">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsGenericICollectionTClear">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsGenericICollectionTRemoveT0">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsGenericIListTInsertInt32T0">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.Insert(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsGenericIListTRemoveAtInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListAddObject">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListClear">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListRemoveAtInt32">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of ReadOnlyCollection`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="T:System.Fakes.ShimDateTime">
            <summary>Shim type of System.DateTime</summary>
        </member>
        <member name="M:System.Fakes.ShimDateTime.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.AdditionOpDateTimeTimeSpan">
            <summary>Sets the shim of DateTime.op_Addition(DateTime d, TimeSpan t)</summary>
        </member>
        <member name="T:System.Fakes.ShimDateTime.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Fakes.ShimDateTime.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Fakes.ShimDateTime.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.CompareDateTimeDateTime">
            <summary>Sets the shim of DateTime.Compare(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.DateToTicksInt32Int32Int32">
            <summary>Sets the shim of DateTime.DateToTicks(Int32 year, Int32 month, Int32 day)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.DaysInMonthInt32Int32">
            <summary>Sets the shim of DateTime.DaysInMonth(Int32 year, Int32 month)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.DoubleDateToTicksDouble">
            <summary>Sets the shim of DateTime.DoubleDateToTicks(Double value)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.EqualityOpDateTimeDateTime">
            <summary>Sets the shim of DateTime.op_Equality(DateTime d1, DateTime d2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.EqualsDateTimeDateTime">
            <summary>Sets the shim of DateTime.Equals(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.FromBinaryInt64">
            <summary>Sets the shim of DateTime.FromBinary(Int64 dateData)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.FromBinaryRawInt64">
            <summary>Sets the shim of DateTime.FromBinaryRaw(Int64 dateData)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.FromFileTimeInt64">
            <summary>Sets the shim of DateTime.FromFileTime(Int64 fileTime)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.FromFileTimeUtcInt64">
            <summary>Sets the shim of DateTime.FromFileTimeUtc(Int64 fileTime)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.FromOADateDouble">
            <summary>Sets the shim of DateTime.FromOADate(Double d)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.GreaterThanOpDateTimeDateTime">
            <summary>Sets the shim of DateTime.op_GreaterThan(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.GreaterThanOrEqualOpDateTimeDateTime">
            <summary>Sets the shim of DateTime.op_GreaterThanOrEqual(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.InequalityOpDateTimeDateTime">
            <summary>Sets the shim of DateTime.op_Inequality(DateTime d1, DateTime d2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.IsLeapYearInt32">
            <summary>Sets the shim of DateTime.IsLeapYear(Int32 year)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.LessThanOpDateTimeDateTime">
            <summary>Sets the shim of DateTime.op_LessThan(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.LessThanOrEqualOpDateTimeDateTime">
            <summary>Sets the shim of DateTime.op_LessThanOrEqual(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.NowGet">
            <summary>Sets the shim of DateTime.get_Now()</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.ParseExactStringStringArrayIFormatProviderDateTimeStyles">
            <summary>Sets the shim of DateTime.ParseExact(String s, String[] formats, IFormatProvider provider, DateTimeStyles style)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.ParseExactStringStringIFormatProvider">
            <summary>Sets the shim of DateTime.ParseExact(String s, String format, IFormatProvider provider)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.ParseExactStringStringIFormatProviderDateTimeStyles">
            <summary>Sets the shim of DateTime.ParseExact(String s, String format, IFormatProvider provider, DateTimeStyles style)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.ParseString">
            <summary>Sets the shim of DateTime.Parse(String s)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.ParseStringIFormatProvider">
            <summary>Sets the shim of DateTime.Parse(String s, IFormatProvider provider)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.ParseStringIFormatProviderDateTimeStyles">
            <summary>Sets the shim of DateTime.Parse(String s, IFormatProvider provider, DateTimeStyles styles)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.SpecifyKindDateTimeDateTimeKind">
            <summary>Sets the shim of DateTime.SpecifyKind(DateTime value, DateTimeKind kind)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.StaticConstructor">
            <summary>Sets the shim of DateTime.DateTime()</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.SubtractionOpDateTimeDateTime">
            <summary>Sets the shim of DateTime.op_Subtraction(DateTime d1, DateTime d2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.SubtractionOpDateTimeTimeSpan">
            <summary>Sets the shim of DateTime.op_Subtraction(DateTime d, TimeSpan t)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TicksToOADateInt64">
            <summary>Sets the shim of DateTime.TicksToOADate(Int64 value)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TimeToTicksInt32Int32Int32">
            <summary>Sets the shim of DateTime.TimeToTicks(Int32 hour, Int32 minute, Int32 second)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TodayGet">
            <summary>Sets the shim of DateTime.get_Today()</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TryCreateInt32Int32Int32Int32Int32Int32Int32DateTimeOut">
            <summary>Sets the shim of DateTime.TryCreate(Int32 year, Int32 month, Int32 day, Int32 hour, Int32 minute, Int32 second, Int32 millisecond, DateTime&amp; result)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TryParseExactStringStringArrayIFormatProviderDateTimeStylesDateTimeOut">
            <summary>Sets the shim of DateTime.TryParseExact(String s, String[] formats, IFormatProvider provider, DateTimeStyles style, DateTime&amp; result)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TryParseExactStringStringIFormatProviderDateTimeStylesDateTimeOut">
            <summary>Sets the shim of DateTime.TryParseExact(String s, String format, IFormatProvider provider, DateTimeStyles style, DateTime&amp; result)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TryParseStringDateTimeOut">
            <summary>Sets the shim of DateTime.TryParse(String s, DateTime&amp; result)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TryParseStringIFormatProviderDateTimeStylesDateTimeOut">
            <summary>Sets the shim of DateTime.TryParse(String s, IFormatProvider provider, DateTimeStyles styles, DateTime&amp; result)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.UtcNowGet">
            <summary>Sets the shim of DateTime.get_UtcNow()</summary>
        </member>
        <member name="T:System.Fakes.ShimGuid">
            <summary>Shim type of System.Guid</summary>
        </member>
        <member name="M:System.Fakes.ShimGuid.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:System.Fakes.ShimGuid.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Fakes.ShimGuid.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Fakes.ShimGuid.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.EatAllWhitespaceString">
            <summary>Sets the shim of Guid.EatAllWhitespace(String str)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.EqualityOpGuidGuid">
            <summary>Sets the shim of Guid.op_Equality(Guid a, Guid b)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.HexToCharInt32">
            <summary>Sets the shim of Guid.HexToChar(Int32 a)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.InequalityOpGuidGuid">
            <summary>Sets the shim of Guid.op_Inequality(Guid a, Guid b)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.IsHexPrefixStringInt32">
            <summary>Sets the shim of Guid.IsHexPrefix(String str, Int32 i)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.NewGuid">
            <summary>Sets the shim of Guid.NewGuid()</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.ParseExactStringString">
            <summary>Sets the shim of Guid.ParseExact(String input, String format)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.ParseString">
            <summary>Sets the shim of Guid.Parse(String input)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.StaticConstructor">
            <summary>Sets the shim of Guid.Guid()</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.TryParseExactStringStringGuidOut">
            <summary>Sets the shim of Guid.TryParseExact(String input, String format, Guid&amp; result)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.TryParseStringGuidOut">
            <summary>Sets the shim of Guid.TryParse(String input, Guid&amp; result)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimDirectory">
            <summary>Shim type of System.IO.Directory</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.CreateDirectoryString">
            <summary>Sets the shim of Directory.CreateDirectory(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.CreateDirectoryStringDirectorySecurity">
            <summary>Sets the shim of Directory.CreateDirectory(String path, DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.DeleteHelperStringStringBooleanBoolean">
            <summary>Sets the shim of Directory.DeleteHelper(String fullPath, String userPath, Boolean recursive, Boolean throwOnTopLevelDirectoryNotFound)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.DeleteString">
            <summary>Sets the shim of Directory.Delete(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.DeleteStringBoolean">
            <summary>Sets the shim of Directory.Delete(String path, Boolean recursive)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.DeleteStringStringBooleanBoolean">
            <summary>Sets the shim of Directory.Delete(String fullPath, String userPath, Boolean recursive, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateDirectoriesString">
            <summary>Sets the shim of Directory.EnumerateDirectories(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateDirectoriesStringString">
            <summary>Sets the shim of Directory.EnumerateDirectories(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateDirectoriesStringStringSearchOption">
            <summary>Sets the shim of Directory.EnumerateDirectories(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFileSystemEntriesString">
            <summary>Sets the shim of Directory.EnumerateFileSystemEntries(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFileSystemEntriesStringString">
            <summary>Sets the shim of Directory.EnumerateFileSystemEntries(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFileSystemEntriesStringStringSearchOption">
            <summary>Sets the shim of Directory.EnumerateFileSystemEntries(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFileSystemNamesStringStringSearchOptionBooleanBoolean">
            <summary>Sets the shim of Directory.EnumerateFileSystemNames(String path, String searchPattern, SearchOption searchOption, Boolean includeFiles, Boolean includeDirs)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFilesString">
            <summary>Sets the shim of Directory.EnumerateFiles(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFilesStringString">
            <summary>Sets the shim of Directory.EnumerateFiles(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFilesStringStringSearchOption">
            <summary>Sets the shim of Directory.EnumerateFiles(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.ExistsString">
            <summary>Sets the shim of Directory.Exists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetAccessControlString">
            <summary>Sets the shim of Directory.GetAccessControl(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetAccessControlStringAccessControlSections">
            <summary>Sets the shim of Directory.GetAccessControl(String path, AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetCreationTimeString">
            <summary>Sets the shim of Directory.GetCreationTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetCreationTimeUtcString">
            <summary>Sets the shim of Directory.GetCreationTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetCurrentDirectory">
            <summary>Sets the shim of Directory.GetCurrentDirectory()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetDemandDirStringBoolean">
            <summary>Sets the shim of Directory.GetDemandDir(String fullPath, Boolean thisDirOnly)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetDirectoriesString">
            <summary>Sets the shim of Directory.GetDirectories(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetDirectoriesStringString">
            <summary>Sets the shim of Directory.GetDirectories(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetDirectoriesStringStringSearchOption">
            <summary>Sets the shim of Directory.GetDirectories(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetDirectoryRootString">
            <summary>Sets the shim of Directory.GetDirectoryRoot(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFileSystemEntriesString">
            <summary>Sets the shim of Directory.GetFileSystemEntries(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFileSystemEntriesStringString">
            <summary>Sets the shim of Directory.GetFileSystemEntries(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFileSystemEntriesStringStringSearchOption">
            <summary>Sets the shim of Directory.GetFileSystemEntries(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFilesString">
            <summary>Sets the shim of Directory.GetFiles(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFilesStringString">
            <summary>Sets the shim of Directory.GetFiles(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFilesStringStringSearchOption">
            <summary>Sets the shim of Directory.GetFiles(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetLastAccessTimeString">
            <summary>Sets the shim of Directory.GetLastAccessTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetLastAccessTimeUtcString">
            <summary>Sets the shim of Directory.GetLastAccessTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetLastWriteTimeString">
            <summary>Sets the shim of Directory.GetLastWriteTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetLastWriteTimeUtcString">
            <summary>Sets the shim of Directory.GetLastWriteTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetLogicalDrives">
            <summary>Sets the shim of Directory.GetLogicalDrives()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetParentString">
            <summary>Sets the shim of Directory.GetParent(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalCreateDirectoryHelperStringBoolean">
            <summary>Sets the shim of Directory.InternalCreateDirectoryHelper(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalCreateDirectoryStringStringObject">
            <summary>Sets the shim of Directory.InternalCreateDirectory(String fullPath, String path, Object dirSecurityObj)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalCreateDirectoryStringStringObjectBoolean">
            <summary>Sets the shim of Directory.InternalCreateDirectory(String fullPath, String path, Object dirSecurityObj, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalEnumerateDirectoriesStringStringSearchOption">
            <summary>Sets the shim of Directory.InternalEnumerateDirectories(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalEnumerateFileSystemEntriesStringStringSearchOption">
            <summary>Sets the shim of Directory.InternalEnumerateFileSystemEntries(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalEnumerateFilesStringStringSearchOption">
            <summary>Sets the shim of Directory.InternalEnumerateFiles(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalExistsHelperStringBoolean">
            <summary>Sets the shim of Directory.InternalExistsHelper(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalExistsString">
            <summary>Sets the shim of Directory.InternalExists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalExistsStringInt32Out">
            <summary>Sets the shim of Directory.InternalExists(String path, Int32&amp; lastError)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetCurrentDirectoryBoolean">
            <summary>Sets the shim of Directory.InternalGetCurrentDirectory(Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetDirectoriesStringStringSearchOption">
            <summary>Sets the shim of Directory.InternalGetDirectories(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetDirectoryRootString">
            <summary>Sets the shim of Directory.InternalGetDirectoryRoot(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetFileDirectoryNamesStringStringStringBooleanBooleanSearchOptionBoolean">
            <summary>Sets the shim of Directory.InternalGetFileDirectoryNames(String path, String userPathOriginal, String searchPattern, Boolean includeFiles, Boolean includeDirs, SearchOption searchOption, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetFileSystemEntriesStringStringSearchOption">
            <summary>Sets the shim of Directory.InternalGetFileSystemEntries(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetFilesStringStringSearchOption">
            <summary>Sets the shim of Directory.InternalGetFiles(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalMoveStringStringBoolean">
            <summary>Sets the shim of Directory.InternalMove(String sourceDirName, String destDirName, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.MoveStringString">
            <summary>Sets the shim of Directory.Move(String sourceDirName, String destDirName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.OpenHandleString">
            <summary>Sets the shim of Directory.OpenHandle(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetAccessControlStringDirectorySecurity">
            <summary>Sets the shim of Directory.SetAccessControl(String path, DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetCreationTimeStringDateTime">
            <summary>Sets the shim of Directory.SetCreationTime(String path, DateTime creationTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetCreationTimeUtcStringDateTime">
            <summary>Sets the shim of Directory.SetCreationTimeUtc(String path, DateTime creationTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetCurrentDirectoryString">
            <summary>Sets the shim of Directory.SetCurrentDirectory(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetLastAccessTimeStringDateTime">
            <summary>Sets the shim of Directory.SetLastAccessTime(String path, DateTime lastAccessTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetLastAccessTimeUtcStringDateTime">
            <summary>Sets the shim of Directory.SetLastAccessTimeUtc(String path, DateTime lastAccessTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetLastWriteTimeStringDateTime">
            <summary>Sets the shim of Directory.SetLastWriteTime(String path, DateTime lastWriteTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetLastWriteTimeUtcStringDateTime">
            <summary>Sets the shim of Directory.SetLastWriteTimeUtc(String path, DateTime lastWriteTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeCreateDirectoryString">
            <summary>Sets the shim of Directory.UnsafeCreateDirectory(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeDeleteStringBoolean">
            <summary>Sets the shim of Directory.UnsafeDelete(String path, Boolean recursive)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeExistsString">
            <summary>Sets the shim of Directory.UnsafeExists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeGetCurrentDirectory">
            <summary>Sets the shim of Directory.UnsafeGetCurrentDirectory()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeGetDirectoriesStringStringSearchOption">
            <summary>Sets the shim of Directory.UnsafeGetDirectories(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeGetFilesStringStringSearchOption">
            <summary>Sets the shim of Directory.UnsafeGetFiles(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeMoveStringString">
            <summary>Sets the shim of Directory.UnsafeMove(String sourceDirName, String destDirName)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimDirectoryInfo">
            <summary>Shim type of System.IO.DirectoryInfo</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectoryInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectoryInfo.#ctor(System.IO.DirectoryInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimDirectoryInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.Create">
            <summary>Sets the shim of DirectoryInfo.Create()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.CreateDirectorySecurity">
            <summary>Sets the shim of DirectoryInfo.Create(DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.CreateSubdirectoryHelperStringObject">
            <summary>Sets the shim of DirectoryInfo.CreateSubdirectoryHelper(String path, Object directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.CreateSubdirectoryString">
            <summary>Sets the shim of DirectoryInfo.CreateSubdirectory(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.CreateSubdirectoryStringDirectorySecurity">
            <summary>Sets the shim of DirectoryInfo.CreateSubdirectory(String path, DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.Delete">
            <summary>Sets the shim of DirectoryInfo.Delete()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.DeleteBoolean">
            <summary>Sets the shim of DirectoryInfo.Delete(Boolean recursive)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateDirectories">
            <summary>Sets the shim of DirectoryInfo.EnumerateDirectories()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateDirectoriesString">
            <summary>Sets the shim of DirectoryInfo.EnumerateDirectories(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateDirectoriesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.EnumerateDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFileSystemInfos">
            <summary>Sets the shim of DirectoryInfo.EnumerateFileSystemInfos()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFileSystemInfosString">
            <summary>Sets the shim of DirectoryInfo.EnumerateFileSystemInfos(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFileSystemInfosStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.EnumerateFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFiles">
            <summary>Sets the shim of DirectoryInfo.EnumerateFiles()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFilesString">
            <summary>Sets the shim of DirectoryInfo.EnumerateFiles(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFilesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.EnumerateFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.ExistsGet">
            <summary>Sets the shim of DirectoryInfo.get_Exists()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetAccessControl">
            <summary>Sets the shim of DirectoryInfo.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetAccessControlAccessControlSections">
            <summary>Sets the shim of DirectoryInfo.GetAccessControl(AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetDirectories">
            <summary>Sets the shim of DirectoryInfo.GetDirectories()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetDirectoriesString">
            <summary>Sets the shim of DirectoryInfo.GetDirectories(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetDirectoriesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.GetDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFileSystemInfos">
            <summary>Sets the shim of DirectoryInfo.GetFileSystemInfos()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFileSystemInfosString">
            <summary>Sets the shim of DirectoryInfo.GetFileSystemInfos(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFileSystemInfosStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.GetFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFiles">
            <summary>Sets the shim of DirectoryInfo.GetFiles()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFilesString">
            <summary>Sets the shim of DirectoryInfo.GetFiles(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFilesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.GetFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InitStringBoolean">
            <summary>Sets the shim of DirectoryInfo.Init(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalEnumerateDirectoriesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalEnumerateDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalEnumerateFileSystemInfosStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalEnumerateFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalEnumerateFilesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalEnumerateFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalGetDirectoriesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalGetDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalGetFileSystemInfosStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalGetFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalGetFilesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalGetFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.MoveToString">
            <summary>Sets the shim of DirectoryInfo.MoveTo(String destDirName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.NameGet">
            <summary>Sets the shim of DirectoryInfo.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.ParentGet">
            <summary>Sets the shim of DirectoryInfo.get_Parent()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.RootGet">
            <summary>Sets the shim of DirectoryInfo.get_Root()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.SetAccessControlDirectorySecurity">
            <summary>Sets the shim of DirectoryInfo.SetAccessControl(DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.ToString01">
            <summary>Sets the shim of DirectoryInfo.ToString()</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectoryInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectoryInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectoryInfo.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of DirectoryInfo.DirectoryInfo(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ConstructorString">
            <summary>Sets the shim of DirectoryInfo.DirectoryInfo(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ConstructorStringBoolean">
            <summary>Sets the shim of DirectoryInfo.DirectoryInfo(String fullPath, Boolean junk)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.Create">
            <summary>Sets the shim of DirectoryInfo.Create()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.CreateDirectorySecurity">
            <summary>Sets the shim of DirectoryInfo.Create(DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.CreateSubdirectoryHelperStringObject">
            <summary>Sets the shim of DirectoryInfo.CreateSubdirectoryHelper(String path, Object directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.CreateSubdirectoryString">
            <summary>Sets the shim of DirectoryInfo.CreateSubdirectory(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.CreateSubdirectoryStringDirectorySecurity">
            <summary>Sets the shim of DirectoryInfo.CreateSubdirectory(String path, DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.Delete">
            <summary>Sets the shim of DirectoryInfo.Delete()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.DeleteBoolean">
            <summary>Sets the shim of DirectoryInfo.Delete(Boolean recursive)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateDirectories">
            <summary>Sets the shim of DirectoryInfo.EnumerateDirectories()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateDirectoriesString">
            <summary>Sets the shim of DirectoryInfo.EnumerateDirectories(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateDirectoriesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.EnumerateDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFileSystemInfos">
            <summary>Sets the shim of DirectoryInfo.EnumerateFileSystemInfos()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFileSystemInfosString">
            <summary>Sets the shim of DirectoryInfo.EnumerateFileSystemInfos(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFileSystemInfosStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.EnumerateFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFiles">
            <summary>Sets the shim of DirectoryInfo.EnumerateFiles()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFilesString">
            <summary>Sets the shim of DirectoryInfo.EnumerateFiles(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFilesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.EnumerateFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ExistsGet">
            <summary>Sets the shim of DirectoryInfo.get_Exists()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetAccessControl">
            <summary>Sets the shim of DirectoryInfo.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetAccessControlAccessControlSections">
            <summary>Sets the shim of DirectoryInfo.GetAccessControl(AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetDirNameString">
            <summary>Sets the shim of DirectoryInfo.GetDirName(String fullPath)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetDirectories">
            <summary>Sets the shim of DirectoryInfo.GetDirectories()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetDirectoriesString">
            <summary>Sets the shim of DirectoryInfo.GetDirectories(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetDirectoriesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.GetDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetDisplayNameStringString">
            <summary>Sets the shim of DirectoryInfo.GetDisplayName(String originalPath, String fullPath)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFileSystemInfos">
            <summary>Sets the shim of DirectoryInfo.GetFileSystemInfos()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFileSystemInfosString">
            <summary>Sets the shim of DirectoryInfo.GetFileSystemInfos(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFileSystemInfosStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.GetFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFiles">
            <summary>Sets the shim of DirectoryInfo.GetFiles()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFilesString">
            <summary>Sets the shim of DirectoryInfo.GetFiles(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFilesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.GetFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InitStringBoolean">
            <summary>Sets the shim of DirectoryInfo.Init(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalEnumerateDirectoriesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalEnumerateDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalEnumerateFileSystemInfosStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalEnumerateFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalEnumerateFilesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalEnumerateFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalGetDirectoriesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalGetDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalGetFileSystemInfosStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalGetFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalGetFilesStringSearchOption">
            <summary>Sets the shim of DirectoryInfo.InternalGetFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.MoveToString">
            <summary>Sets the shim of DirectoryInfo.MoveTo(String destDirName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.NameGet">
            <summary>Sets the shim of DirectoryInfo.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ParentGet">
            <summary>Sets the shim of DirectoryInfo.get_Parent()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.RootGet">
            <summary>Sets the shim of DirectoryInfo.get_Root()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.SetAccessControlDirectorySecurity">
            <summary>Sets the shim of DirectoryInfo.SetAccessControl(DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ToString">
            <summary>Sets the shim of DirectoryInfo.ToString()</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFile">
            <summary>Shim type of System.IO.File</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.AppendAllLinesStringIEnumerableOfString">
            <summary>Sets the shim of File.AppendAllLines(String path, IEnumerable`1&lt;String&gt; contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.AppendAllLinesStringIEnumerableOfStringEncoding">
            <summary>Sets the shim of File.AppendAllLines(String path, IEnumerable`1&lt;String&gt; contents, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.AppendAllTextStringString">
            <summary>Sets the shim of File.AppendAllText(String path, String contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.AppendAllTextStringStringEncoding">
            <summary>Sets the shim of File.AppendAllText(String path, String contents, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.AppendTextString">
            <summary>Sets the shim of File.AppendText(String path)</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CopyStringString">
            <summary>Sets the shim of File.Copy(String sourceFileName, String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CopyStringStringBoolean">
            <summary>Sets the shim of File.Copy(String sourceFileName, String destFileName, Boolean overwrite)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CreateString">
            <summary>Sets the shim of File.Create(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CreateStringInt32">
            <summary>Sets the shim of File.Create(String path, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CreateStringInt32FileOptions">
            <summary>Sets the shim of File.Create(String path, Int32 bufferSize, FileOptions options)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CreateStringInt32FileOptionsFileSecurity">
            <summary>Sets the shim of File.Create(String path, Int32 bufferSize, FileOptions options, FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CreateTextString">
            <summary>Sets the shim of File.CreateText(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.DecryptString">
            <summary>Sets the shim of File.Decrypt(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.DeleteString">
            <summary>Sets the shim of File.Delete(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.EncryptString">
            <summary>Sets the shim of File.Encrypt(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ExistsString">
            <summary>Sets the shim of File.Exists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetAccessControlString">
            <summary>Sets the shim of File.GetAccessControl(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetAccessControlStringAccessControlSections">
            <summary>Sets the shim of File.GetAccessControl(String path, AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetAttributesString">
            <summary>Sets the shim of File.GetAttributes(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetCreationTimeString">
            <summary>Sets the shim of File.GetCreationTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetCreationTimeUtcString">
            <summary>Sets the shim of File.GetCreationTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetLastAccessTimeString">
            <summary>Sets the shim of File.GetLastAccessTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetLastAccessTimeUtcString">
            <summary>Sets the shim of File.GetLastAccessTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetLastWriteTimeString">
            <summary>Sets the shim of File.GetLastWriteTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetLastWriteTimeUtcString">
            <summary>Sets the shim of File.GetLastWriteTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalAppendAllTextStringStringEncoding">
            <summary>Sets the shim of File.InternalAppendAllText(String path, String contents, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalCopyStringStringBooleanBoolean">
            <summary>Sets the shim of File.InternalCopy(String sourceFileName, String destFileName, Boolean overwrite, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalDeleteStringBoolean">
            <summary>Sets the shim of File.InternalDelete(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalExistsHelperStringBoolean">
            <summary>Sets the shim of File.InternalExistsHelper(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalExistsString">
            <summary>Sets the shim of File.InternalExists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalGetCreationTimeUtcStringBoolean">
            <summary>Sets the shim of File.InternalGetCreationTimeUtc(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalGetLastAccessTimeUtcStringBoolean">
            <summary>Sets the shim of File.InternalGetLastAccessTimeUtc(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalGetLastWriteTimeUtcStringBoolean">
            <summary>Sets the shim of File.InternalGetLastWriteTimeUtc(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalMoveStringStringBoolean">
            <summary>Sets the shim of File.InternalMove(String sourceFileName, String destFileName, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalReadAllBytesStringBoolean">
            <summary>Sets the shim of File.InternalReadAllBytes(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalReadAllLinesStringEncoding">
            <summary>Sets the shim of File.InternalReadAllLines(String path, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalReadAllTextStringEncodingBoolean">
            <summary>Sets the shim of File.InternalReadAllText(String path, Encoding encoding, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalReplaceStringStringStringBoolean">
            <summary>Sets the shim of File.InternalReplace(String sourceFileName, String destinationFileName, String destinationBackupFileName, Boolean ignoreMetadataErrors)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalWriteAllBytesStringByteArrayBoolean">
            <summary>Sets the shim of File.InternalWriteAllBytes(String path, Byte[] bytes, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalWriteAllLinesTextWriterIEnumerableOfString">
            <summary>Sets the shim of File.InternalWriteAllLines(TextWriter writer, IEnumerable`1&lt;String&gt; contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalWriteAllTextStringStringEncodingBoolean">
            <summary>Sets the shim of File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.MoveStringString">
            <summary>Sets the shim of File.Move(String sourceFileName, String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenFileStringFileAccessSafeFileHandleOut">
            <summary>Sets the shim of File.OpenFile(String path, FileAccess access, SafeFileHandle&amp; handle)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenReadString">
            <summary>Sets the shim of File.OpenRead(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenStringFileMode">
            <summary>Sets the shim of File.Open(String path, FileMode mode)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenStringFileModeFileAccess">
            <summary>Sets the shim of File.Open(String path, FileMode mode, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenStringFileModeFileAccessFileShare">
            <summary>Sets the shim of File.Open(String path, FileMode mode, FileAccess access, FileShare share)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenTextString">
            <summary>Sets the shim of File.OpenText(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenWriteString">
            <summary>Sets the shim of File.OpenWrite(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadAllBytesString">
            <summary>Sets the shim of File.ReadAllBytes(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadAllLinesString">
            <summary>Sets the shim of File.ReadAllLines(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadAllLinesStringEncoding">
            <summary>Sets the shim of File.ReadAllLines(String path, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadAllTextString">
            <summary>Sets the shim of File.ReadAllText(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadAllTextStringEncoding">
            <summary>Sets the shim of File.ReadAllText(String path, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadLinesString">
            <summary>Sets the shim of File.ReadLines(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadLinesStringEncoding">
            <summary>Sets the shim of File.ReadLines(String path, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReplaceStringStringString">
            <summary>Sets the shim of File.Replace(String sourceFileName, String destinationFileName, String destinationBackupFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReplaceStringStringStringBoolean">
            <summary>Sets the shim of File.Replace(String sourceFileName, String destinationFileName, String destinationBackupFileName, Boolean ignoreMetadataErrors)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetAccessControlStringFileSecurity">
            <summary>Sets the shim of File.SetAccessControl(String path, FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetAttributesStringFileAttributes">
            <summary>Sets the shim of File.SetAttributes(String path, FileAttributes fileAttributes)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetCreationTimeStringDateTime">
            <summary>Sets the shim of File.SetCreationTime(String path, DateTime creationTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetCreationTimeUtcStringDateTime">
            <summary>Sets the shim of File.SetCreationTimeUtc(String path, DateTime creationTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetLastAccessTimeStringDateTime">
            <summary>Sets the shim of File.SetLastAccessTime(String path, DateTime lastAccessTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetLastAccessTimeUtcStringDateTime">
            <summary>Sets the shim of File.SetLastAccessTimeUtc(String path, DateTime lastAccessTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetLastWriteTimeStringDateTime">
            <summary>Sets the shim of File.SetLastWriteTime(String path, DateTime lastWriteTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetLastWriteTimeUtcStringDateTime">
            <summary>Sets the shim of File.SetLastWriteTimeUtc(String path, DateTime lastWriteTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeCopyStringStringBoolean">
            <summary>Sets the shim of File.UnsafeCopy(String sourceFileName, String destFileName, Boolean overwrite)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeDeleteString">
            <summary>Sets the shim of File.UnsafeDelete(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeExistsString">
            <summary>Sets the shim of File.UnsafeExists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeMoveStringString">
            <summary>Sets the shim of File.UnsafeMove(String sourceFileName, String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeReadAllBytesString">
            <summary>Sets the shim of File.UnsafeReadAllBytes(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeReadAllTextString">
            <summary>Sets the shim of File.UnsafeReadAllText(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeWriteAllBytesStringByteArray">
            <summary>Sets the shim of File.UnsafeWriteAllBytes(String path, Byte[] bytes)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeWriteAllTextStringString">
            <summary>Sets the shim of File.UnsafeWriteAllText(String path, String contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllBytesStringByteArray">
            <summary>Sets the shim of File.WriteAllBytes(String path, Byte[] bytes)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllLinesStringIEnumerableOfString">
            <summary>Sets the shim of File.WriteAllLines(String path, IEnumerable`1&lt;String&gt; contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllLinesStringIEnumerableOfStringEncoding">
            <summary>Sets the shim of File.WriteAllLines(String path, IEnumerable`1&lt;String&gt; contents, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllLinesStringStringArray">
            <summary>Sets the shim of File.WriteAllLines(String path, String[] contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllLinesStringStringArrayEncoding">
            <summary>Sets the shim of File.WriteAllLines(String path, String[] contents, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllTextStringString">
            <summary>Sets the shim of File.WriteAllText(String path, String contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllTextStringStringEncoding">
            <summary>Sets the shim of File.WriteAllText(String path, String contents, Encoding encoding)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFileInfo">
            <summary>Shim type of System.IO.FileInfo</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileInfo.#ctor(System.IO.FileInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFileInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.AppendText">
            <summary>Sets the shim of FileInfo.AppendText()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.CopyToString">
            <summary>Sets the shim of FileInfo.CopyTo(String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.CopyToStringBoolean">
            <summary>Sets the shim of FileInfo.CopyTo(String destFileName, Boolean overwrite)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.Create">
            <summary>Sets the shim of FileInfo.Create()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.CreateText">
            <summary>Sets the shim of FileInfo.CreateText()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.Decrypt">
            <summary>Sets the shim of FileInfo.Decrypt()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.Delete">
            <summary>Sets the shim of FileInfo.Delete()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.DirectoryGet">
            <summary>Sets the shim of FileInfo.get_Directory()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.DirectoryNameGet">
            <summary>Sets the shim of FileInfo.get_DirectoryName()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.Encrypt">
            <summary>Sets the shim of FileInfo.Encrypt()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.ExistsGet">
            <summary>Sets the shim of FileInfo.get_Exists()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.GetAccessControl">
            <summary>Sets the shim of FileInfo.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.GetAccessControlAccessControlSections">
            <summary>Sets the shim of FileInfo.GetAccessControl(AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.GetDisplayPathString">
            <summary>Sets the shim of FileInfo.GetDisplayPath(String originalPath)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.InitStringBoolean">
            <summary>Sets the shim of FileInfo.Init(String fileName, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of FileInfo.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.IsReadOnlySetBoolean">
            <summary>Sets the shim of FileInfo.set_IsReadOnly(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.LengthGet">
            <summary>Sets the shim of FileInfo.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.MoveToString">
            <summary>Sets the shim of FileInfo.MoveTo(String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.NameGet">
            <summary>Sets the shim of FileInfo.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenFileMode">
            <summary>Sets the shim of FileInfo.Open(FileMode mode)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenFileModeFileAccess">
            <summary>Sets the shim of FileInfo.Open(FileMode mode, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenFileModeFileAccessFileShare">
            <summary>Sets the shim of FileInfo.Open(FileMode mode, FileAccess access, FileShare share)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenRead">
            <summary>Sets the shim of FileInfo.OpenRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenText">
            <summary>Sets the shim of FileInfo.OpenText()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenWrite">
            <summary>Sets the shim of FileInfo.OpenWrite()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.ReplaceStringString">
            <summary>Sets the shim of FileInfo.Replace(String destinationFileName, String destinationBackupFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.ReplaceStringStringBoolean">
            <summary>Sets the shim of FileInfo.Replace(String destinationFileName, String destinationBackupFileName, Boolean ignoreMetadataErrors)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.SetAccessControlFileSecurity">
            <summary>Sets the shim of FileInfo.SetAccessControl(FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.ToString01">
            <summary>Sets the shim of FileInfo.ToString()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AppendText">
            <summary>Sets the shim of FileInfo.AppendText()</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileInfo.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of FileInfo.FileInfo(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ConstructorString">
            <summary>Sets the shim of FileInfo.FileInfo(String fileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ConstructorStringBoolean">
            <summary>Sets the shim of FileInfo.FileInfo(String fullPath, Boolean ignoreThis)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.CopyToString">
            <summary>Sets the shim of FileInfo.CopyTo(String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.CopyToStringBoolean">
            <summary>Sets the shim of FileInfo.CopyTo(String destFileName, Boolean overwrite)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.Create">
            <summary>Sets the shim of FileInfo.Create()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.CreateText">
            <summary>Sets the shim of FileInfo.CreateText()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.Decrypt">
            <summary>Sets the shim of FileInfo.Decrypt()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.Delete">
            <summary>Sets the shim of FileInfo.Delete()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.DirectoryGet">
            <summary>Sets the shim of FileInfo.get_Directory()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.DirectoryNameGet">
            <summary>Sets the shim of FileInfo.get_DirectoryName()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.Encrypt">
            <summary>Sets the shim of FileInfo.Encrypt()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ExistsGet">
            <summary>Sets the shim of FileInfo.get_Exists()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.GetAccessControl">
            <summary>Sets the shim of FileInfo.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.GetAccessControlAccessControlSections">
            <summary>Sets the shim of FileInfo.GetAccessControl(AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.GetDisplayPathString">
            <summary>Sets the shim of FileInfo.GetDisplayPath(String originalPath)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.InitStringBoolean">
            <summary>Sets the shim of FileInfo.Init(String fileName, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.IsReadOnlyGet">
            <summary>Sets the shim of FileInfo.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.IsReadOnlySetBoolean">
            <summary>Sets the shim of FileInfo.set_IsReadOnly(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.LengthGet">
            <summary>Sets the shim of FileInfo.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.MoveToString">
            <summary>Sets the shim of FileInfo.MoveTo(String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.NameGet">
            <summary>Sets the shim of FileInfo.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenFileMode">
            <summary>Sets the shim of FileInfo.Open(FileMode mode)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenFileModeFileAccess">
            <summary>Sets the shim of FileInfo.Open(FileMode mode, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenFileModeFileAccessFileShare">
            <summary>Sets the shim of FileInfo.Open(FileMode mode, FileAccess access, FileShare share)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenRead">
            <summary>Sets the shim of FileInfo.OpenRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenText">
            <summary>Sets the shim of FileInfo.OpenText()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenWrite">
            <summary>Sets the shim of FileInfo.OpenWrite()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ReplaceStringString">
            <summary>Sets the shim of FileInfo.Replace(String destinationFileName, String destinationBackupFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ReplaceStringStringBoolean">
            <summary>Sets the shim of FileInfo.Replace(String destinationFileName, String destinationBackupFileName, Boolean ignoreMetadataErrors)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.SetAccessControlFileSecurity">
            <summary>Sets the shim of FileInfo.SetAccessControl(FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ToString">
            <summary>Sets the shim of FileInfo.ToString()</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFileStream">
            <summary>Shim type of System.IO.FileStream</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.#ctor(System.IO.FileStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFileStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of FileStream.BeginRead(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object stateObject)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of FileStream.BeginWrite(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object stateObject)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.CanReadGet">
            <summary>Sets the shim of FileStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of FileStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of FileStream.get_CanWrite()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of FileStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.EndReadIAsyncResult">
            <summary>Sets the shim of FileStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.EndWriteIAsyncResult">
            <summary>Sets the shim of FileStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.Flush">
            <summary>Sets the shim of FileStream.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.FlushAsyncCancellationToken">
            <summary>Sets the shim of FileStream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.FlushBoolean">
            <summary>Sets the shim of FileStream.Flush(Boolean flushToDisk)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.FlushInternalBuffer">
            <summary>Sets the shim of FileStream.FlushInternalBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.FlushOSBuffer">
            <summary>Sets the shim of FileStream.FlushOSBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.FlushRead">
            <summary>Sets the shim of FileStream.FlushRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.FlushWriteBoolean">
            <summary>Sets the shim of FileStream.FlushWrite(Boolean calledFromFinalizer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.GetAccessControl">
            <summary>Sets the shim of FileStream.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.HandleGet">
            <summary>Sets the shim of FileStream.get_Handle()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.IsAsyncGet">
            <summary>Sets the shim of FileStream.get_IsAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.LengthGet">
            <summary>Sets the shim of FileStream.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.LockInt64Int64">
            <summary>Sets the shim of FileStream.Lock(Int64 position, Int64 length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.NameGet">
            <summary>Sets the shim of FileStream.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.NameInternalGet">
            <summary>Sets the shim of FileStream.get_NameInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.PositionGet">
            <summary>Sets the shim of FileStream.get_Position()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of FileStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of FileStream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.ReadByte">
            <summary>Sets the shim of FileStream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of FileStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.ReadCoreByteArrayInt32Int32">
            <summary>Sets the shim of FileStream.ReadCore(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SafeFileHandleGet">
            <summary>Sets the shim of FileStream.get_SafeFileHandle()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SeekCoreInt64SeekOrigin">
            <summary>Sets the shim of FileStream.SeekCore(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of FileStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SetAccessControlFileSecurity">
            <summary>Sets the shim of FileStream.SetAccessControl(FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SetLengthCoreInt64">
            <summary>Sets the shim of FileStream.SetLengthCore(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of FileStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.UnlockInt64Int64">
            <summary>Sets the shim of FileStream.Unlock(Int64 position, Int64 length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.VerifyHandleIsSync">
            <summary>Sets the shim of FileStream.VerifyHandleIsSync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.VerifyOSHandlePosition">
            <summary>Sets the shim of FileStream.VerifyOSHandlePosition()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of FileStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of FileStream.Write(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.WriteByteByte">
            <summary>Sets the shim of FileStream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.WriteCoreByteArrayInt32Int32">
            <summary>Sets the shim of FileStream.WriteCore(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of FileStream.BeginRead(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object stateObject)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of FileStream.BeginWrite(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object stateObject)</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.CanReadGet">
            <summary>Sets the shim of FileStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.CanSeekGet">
            <summary>Sets the shim of FileStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.CanWriteGet">
            <summary>Sets the shim of FileStream.get_CanWrite()</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.CancelTaskOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object})">
            <summary>Sets the shim of FileStream.CancelTask(Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.Constructor">
            <summary>Sets the shim of FileStream.FileStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorIntPtrFileAccess">
            <summary>Sets the shim of FileStream.FileStream(IntPtr handle, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorIntPtrFileAccessBoolean">
            <summary>Sets the shim of FileStream.FileStream(IntPtr handle, FileAccess access, Boolean ownsHandle)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorIntPtrFileAccessBooleanInt32">
            <summary>Sets the shim of FileStream.FileStream(IntPtr handle, FileAccess access, Boolean ownsHandle, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorIntPtrFileAccessBooleanInt32Boolean">
            <summary>Sets the shim of FileStream.FileStream(IntPtr handle, FileAccess access, Boolean ownsHandle, Int32 bufferSize, Boolean isAsync)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorSafeFileHandleFileAccess">
            <summary>Sets the shim of FileStream.FileStream(SafeFileHandle handle, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorSafeFileHandleFileAccessInt32">
            <summary>Sets the shim of FileStream.FileStream(SafeFileHandle handle, FileAccess access, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorSafeFileHandleFileAccessInt32Boolean">
            <summary>Sets the shim of FileStream.FileStream(SafeFileHandle handle, FileAccess access, Int32 bufferSize, Boolean isAsync)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileMode">
            <summary>Sets the shim of FileStream.FileStream(String path, FileMode mode)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccess">
            <summary>Sets the shim of FileStream.FileStream(String path, FileMode mode, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShare">
            <summary>Sets the shim of FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32">
            <summary>Sets the shim of FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32Boolean">
            <summary>Sets the shim of FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, Boolean useAsync)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32FileOptions">
            <summary>Sets the shim of FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32FileOptionsStringBoolean">
            <summary>Sets the shim of FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32FileOptionsStringBooleanBoolean">
            <summary>Sets the shim of FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32FileOptionsStringBooleanBooleanBoolean">
            <summary>Sets the shim of FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileSystemRightsFileShareInt32FileOptions">
            <summary>Sets the shim of FileStream.FileStream(String path, FileMode mode, FileSystemRights rights, FileShare share, Int32 bufferSize, FileOptions options)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileSystemRightsFileShareInt32FileOptionsFileSecurity">
            <summary>Sets the shim of FileStream.FileStream(String path, FileMode mode, FileSystemRights rights, FileShare share, Int32 bufferSize, FileOptions options, FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.DisposeBoolean">
            <summary>Sets the shim of FileStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.EndReadIAsyncResult">
            <summary>Sets the shim of FileStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.EndReadTaskIAsyncResult">
            <summary>Sets the shim of FileStream.EndReadTask(IAsyncResult iar)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.EndWriteIAsyncResult">
            <summary>Sets the shim of FileStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.EndWriteTaskIAsyncResult">
            <summary>Sets the shim of FileStream.EndWriteTask(IAsyncResult iar)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.Flush">
            <summary>Sets the shim of FileStream.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.FlushAsyncCancellationToken">
            <summary>Sets the shim of FileStream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.FlushBoolean">
            <summary>Sets the shim of FileStream.Flush(Boolean flushToDisk)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.FlushInternalBuffer">
            <summary>Sets the shim of FileStream.FlushInternalBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.FlushOSBuffer">
            <summary>Sets the shim of FileStream.FlushOSBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.FlushRead">
            <summary>Sets the shim of FileStream.FlushRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.FlushWriteBoolean">
            <summary>Sets the shim of FileStream.FlushWrite(Boolean calledFromFinalizer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.GetAccessControl">
            <summary>Sets the shim of FileStream.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.HandleGet">
            <summary>Sets the shim of FileStream.get_Handle()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.IsAsyncGet">
            <summary>Sets the shim of FileStream.get_IsAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.LengthGet">
            <summary>Sets the shim of FileStream.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.LockInt64Int64">
            <summary>Sets the shim of FileStream.Lock(Int64 position, Int64 length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.NameGet">
            <summary>Sets the shim of FileStream.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.NameInternalGet">
            <summary>Sets the shim of FileStream.get_NameInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.PositionGet">
            <summary>Sets the shim of FileStream.get_Position()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.PositionSetInt64">
            <summary>Sets the shim of FileStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of FileStream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ReadByte">
            <summary>Sets the shim of FileStream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of FileStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ReadCoreByteArrayInt32Int32">
            <summary>Sets the shim of FileStream.ReadCore(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SafeFileHandleGet">
            <summary>Sets the shim of FileStream.get_SafeFileHandle()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SeekCoreInt64SeekOrigin">
            <summary>Sets the shim of FileStream.SeekCore(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of FileStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SetAccessControlFileSecurity">
            <summary>Sets the shim of FileStream.SetAccessControl(FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SetLengthCoreInt64">
            <summary>Sets the shim of FileStream.SetLengthCore(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SetLengthInt64">
            <summary>Sets the shim of FileStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.UnlockInt64Int64">
            <summary>Sets the shim of FileStream.Unlock(Int64 position, Int64 length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.VerifyHandleIsSync">
            <summary>Sets the shim of FileStream.VerifyHandleIsSync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.VerifyOSHandlePosition">
            <summary>Sets the shim of FileStream.VerifyOSHandlePosition()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of FileStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of FileStream.Write(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.WriteByteByte">
            <summary>Sets the shim of FileStream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.WriteCoreByteArrayInt32Int32">
            <summary>Sets the shim of FileStream.WriteCore(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimMemoryStream">
            <summary>Shim type of System.IO.MemoryStream</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimMemoryStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimMemoryStream.#ctor(System.IO.MemoryStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimMemoryStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.CanReadGet">
            <summary>Sets the shim of MemoryStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of MemoryStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of MemoryStream.get_CanWrite()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.CapacityGet">
            <summary>Sets the shim of MemoryStream.get_Capacity()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.CapacitySetInt32">
            <summary>Sets the shim of MemoryStream.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the shim of MemoryStream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MemoryStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.EnsureCapacityInt32">
            <summary>Sets the shim of MemoryStream.EnsureCapacity(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.EnsureWriteable">
            <summary>Sets the shim of MemoryStream.EnsureWriteable()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.Flush">
            <summary>Sets the shim of MemoryStream.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.FlushAsyncCancellationToken">
            <summary>Sets the shim of MemoryStream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.GetBuffer">
            <summary>Sets the shim of MemoryStream.GetBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.InternalEmulateReadInt32">
            <summary>Sets the shim of MemoryStream.InternalEmulateRead(Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.InternalGetBuffer">
            <summary>Sets the shim of MemoryStream.InternalGetBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.InternalGetOriginAndLengthInt32OutInt32Out">
            <summary>Sets the shim of MemoryStream.InternalGetOriginAndLength(Int32&amp; origin, Int32&amp; length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.InternalGetPosition">
            <summary>Sets the shim of MemoryStream.InternalGetPosition()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.InternalReadInt32">
            <summary>Sets the shim of MemoryStream.InternalReadInt32()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.LengthGet">
            <summary>Sets the shim of MemoryStream.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.PositionGet">
            <summary>Sets the shim of MemoryStream.get_Position()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of MemoryStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of MemoryStream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.ReadByte">
            <summary>Sets the shim of MemoryStream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MemoryStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of MemoryStream.Seek(Int64 offset, SeekOrigin loc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of MemoryStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.ToArray">
            <summary>Sets the shim of MemoryStream.ToArray()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.TryGetBufferArraySegmentOfByteOut">
            <summary>Sets the shim of MemoryStream.TryGetBuffer(ArraySegment`1&lt;Byte&gt;&amp; buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of MemoryStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.WriteByteByte">
            <summary>Sets the shim of MemoryStream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.WriteToStream">
            <summary>Sets the shim of MemoryStream.WriteTo(Stream stream)</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimMemoryStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimMemoryStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimMemoryStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.CanReadGet">
            <summary>Sets the shim of MemoryStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.CanSeekGet">
            <summary>Sets the shim of MemoryStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.CanWriteGet">
            <summary>Sets the shim of MemoryStream.get_CanWrite()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.CapacityGet">
            <summary>Sets the shim of MemoryStream.get_Capacity()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.CapacitySetInt32">
            <summary>Sets the shim of MemoryStream.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.Constructor">
            <summary>Sets the shim of MemoryStream.MemoryStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorByteArray">
            <summary>Sets the shim of MemoryStream.MemoryStream(Byte[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorByteArrayBoolean">
            <summary>Sets the shim of MemoryStream.MemoryStream(Byte[] buffer, Boolean writable)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorByteArrayInt32Int32">
            <summary>Sets the shim of MemoryStream.MemoryStream(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorByteArrayInt32Int32Boolean">
            <summary>Sets the shim of MemoryStream.MemoryStream(Byte[] buffer, Int32 index, Int32 count, Boolean writable)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorByteArrayInt32Int32BooleanBoolean">
            <summary>Sets the shim of MemoryStream.MemoryStream(Byte[] buffer, Int32 index, Int32 count, Boolean writable, Boolean publiclyVisible)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorInt32">
            <summary>Sets the shim of MemoryStream.MemoryStream(Int32 capacity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the shim of MemoryStream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.DisposeBoolean">
            <summary>Sets the shim of MemoryStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.EnsureCapacityInt32">
            <summary>Sets the shim of MemoryStream.EnsureCapacity(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.EnsureWriteable">
            <summary>Sets the shim of MemoryStream.EnsureWriteable()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.Flush">
            <summary>Sets the shim of MemoryStream.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.FlushAsyncCancellationToken">
            <summary>Sets the shim of MemoryStream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.GetBuffer">
            <summary>Sets the shim of MemoryStream.GetBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.InternalEmulateReadInt32">
            <summary>Sets the shim of MemoryStream.InternalEmulateRead(Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.InternalGetBuffer">
            <summary>Sets the shim of MemoryStream.InternalGetBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.InternalGetOriginAndLengthInt32OutInt32Out">
            <summary>Sets the shim of MemoryStream.InternalGetOriginAndLength(Int32&amp; origin, Int32&amp; length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.InternalGetPosition">
            <summary>Sets the shim of MemoryStream.InternalGetPosition()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.InternalReadInt32">
            <summary>Sets the shim of MemoryStream.InternalReadInt32()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.LengthGet">
            <summary>Sets the shim of MemoryStream.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.PositionGet">
            <summary>Sets the shim of MemoryStream.get_Position()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.PositionSetInt64">
            <summary>Sets the shim of MemoryStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of MemoryStream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ReadByte">
            <summary>Sets the shim of MemoryStream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MemoryStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of MemoryStream.Seek(Int64 offset, SeekOrigin loc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.SetLengthInt64">
            <summary>Sets the shim of MemoryStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ToArray">
            <summary>Sets the shim of MemoryStream.ToArray()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.TryGetBufferArraySegmentOfByteOut">
            <summary>Sets the shim of MemoryStream.TryGetBuffer(ArraySegment`1&lt;Byte&gt;&amp; buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of MemoryStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.WriteByteByte">
            <summary>Sets the shim of MemoryStream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.WriteToStream">
            <summary>Sets the shim of MemoryStream.WriteTo(Stream stream)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStream">
            <summary>Shim type of System.IO.Stream</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStream.#ctor(System.IO.Stream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginEndReadAsyncByteArrayInt32Int32">
            <summary>Sets the shim of Stream.BeginEndReadAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginEndWriteAsyncByteArrayInt32Int32">
            <summary>Sets the shim of Stream.BeginEndWriteAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginReadInternalByteArrayInt32Int32AsyncCallbackObjectBoolean">
            <summary>Sets the shim of Stream.BeginReadInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state, Boolean serializeAsynchronously)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginWriteInternalByteArrayInt32Int32AsyncCallbackObjectBoolean">
            <summary>Sets the shim of Stream.BeginWriteInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state, Boolean serializeAsynchronously)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BlockingBeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of Stream.BlockingBeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BlockingBeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of Stream.BlockingBeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CanTimeoutGet">
            <summary>Sets the shim of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.Close">
            <summary>Sets the shim of Stream.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CopyToAsyncInternalStreamInt32CancellationToken">
            <summary>Sets the shim of Stream.CopyToAsyncInternal(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CopyToAsyncStream">
            <summary>Sets the shim of Stream.CopyToAsync(Stream destination)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CopyToAsyncStreamInt32">
            <summary>Sets the shim of Stream.CopyToAsync(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the shim of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CopyToStream">
            <summary>Sets the shim of Stream.CopyTo(Stream destination)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CopyToStreamInt32">
            <summary>Sets the shim of Stream.CopyTo(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CreateWaitHandle">
            <summary>Sets the shim of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.Dispose">
            <summary>Sets the shim of Stream.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.EndReadIAsyncResult">
            <summary>Sets the shim of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.EndWriteIAsyncResult">
            <summary>Sets the shim of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.EnsureAsyncActiveSemaphoreInitialized">
            <summary>Sets the shim of Stream.EnsureAsyncActiveSemaphoreInitialized()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.FlushAsync">
            <summary>Sets the shim of Stream.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.FlushAsyncCancellationToken">
            <summary>Sets the shim of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.InternalCopyToStreamInt32">
            <summary>Sets the shim of Stream.InternalCopyTo(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.ObjectInvariant">
            <summary>Sets the shim of Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.ReadAsyncByteArrayInt32Int32">
            <summary>Sets the shim of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.ReadByte">
            <summary>Sets the shim of Stream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.ReadTimeoutGet">
            <summary>Sets the shim of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.ReadTimeoutSetInt32">
            <summary>Sets the shim of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.WriteAsyncByteArrayInt32Int32">
            <summary>Sets the shim of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.WriteByteByte">
            <summary>Sets the shim of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.WriteTimeoutGet">
            <summary>Sets the shim of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.WriteTimeoutSetInt32">
            <summary>Sets the shim of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginEndReadAsyncByteArrayInt32Int32">
            <summary>Sets the shim of Stream.BeginEndReadAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginEndWriteAsyncByteArrayInt32Int32">
            <summary>Sets the shim of Stream.BeginEndWriteAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginReadInternalByteArrayInt32Int32AsyncCallbackObjectBoolean">
            <summary>Sets the shim of Stream.BeginReadInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state, Boolean serializeAsynchronously)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginWriteInternalByteArrayInt32Int32AsyncCallbackObjectBoolean">
            <summary>Sets the shim of Stream.BeginWriteInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state, Boolean serializeAsynchronously)</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BlockingBeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of Stream.BlockingBeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BlockingBeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of Stream.BlockingBeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BlockingEndReadIAsyncResult">
            <summary>Sets the shim of Stream.BlockingEndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BlockingEndWriteIAsyncResult">
            <summary>Sets the shim of Stream.BlockingEndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CanTimeoutGet">
            <summary>Sets the shim of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.Close">
            <summary>Sets the shim of Stream.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.Constructor">
            <summary>Sets the shim of Stream.Stream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CopyToAsyncInternalStreamInt32CancellationToken">
            <summary>Sets the shim of Stream.CopyToAsyncInternal(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CopyToAsyncStream">
            <summary>Sets the shim of Stream.CopyToAsync(Stream destination)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CopyToAsyncStreamInt32">
            <summary>Sets the shim of Stream.CopyToAsync(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the shim of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CopyToStream">
            <summary>Sets the shim of Stream.CopyTo(Stream destination)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CopyToStreamInt32">
            <summary>Sets the shim of Stream.CopyTo(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CreateWaitHandle">
            <summary>Sets the shim of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.Dispose">
            <summary>Sets the shim of Stream.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.DisposeBoolean">
            <summary>Sets the shim of Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.EndReadIAsyncResult">
            <summary>Sets the shim of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.EndWriteIAsyncResult">
            <summary>Sets the shim of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.EnsureAsyncActiveSemaphoreInitialized">
            <summary>Sets the shim of Stream.EnsureAsyncActiveSemaphoreInitialized()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.FlushAsync">
            <summary>Sets the shim of Stream.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.FlushAsyncCancellationToken">
            <summary>Sets the shim of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.InternalCopyToStreamInt32">
            <summary>Sets the shim of Stream.InternalCopyTo(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.ObjectInvariant">
            <summary>Sets the shim of Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.ReadAsyncByteArrayInt32Int32">
            <summary>Sets the shim of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.ReadByte">
            <summary>Sets the shim of Stream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.ReadTimeoutGet">
            <summary>Sets the shim of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.ReadTimeoutSetInt32">
            <summary>Sets the shim of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.StaticConstructor">
            <summary>Sets the shim of Stream.Stream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.SynchronizedStream">
            <summary>Sets the shim of Stream.Synchronized(Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.WriteAsyncByteArrayInt32Int32">
            <summary>Sets the shim of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the shim of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.WriteByteByte">
            <summary>Sets the shim of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.WriteTimeoutGet">
            <summary>Sets the shim of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.WriteTimeoutSetInt32">
            <summary>Sets the shim of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStreamReader">
            <summary>Shim type of System.IO.StreamReader</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamReader.#ctor(System.IO.StreamReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStreamReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.BaseStreamGet">
            <summary>Sets the shim of StreamReader.get_BaseStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ByteBuffer_PropGet">
            <summary>Sets the shim of StreamReader.get_ByteBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ByteLen_PropGet">
            <summary>Sets the shim of StreamReader.get_ByteLen_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ByteLen_PropSetInt32">
            <summary>Sets the shim of StreamReader.set_ByteLen_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.BytePos_PropGet">
            <summary>Sets the shim of StreamReader.get_BytePos_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.BytePos_PropSetInt32">
            <summary>Sets the shim of StreamReader.set_BytePos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CharBuffer_PropGet">
            <summary>Sets the shim of StreamReader.get_CharBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CharLen_PropGet">
            <summary>Sets the shim of StreamReader.get_CharLen_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CharLen_PropSetInt32">
            <summary>Sets the shim of StreamReader.set_CharLen_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CharPos_PropGet">
            <summary>Sets the shim of StreamReader.get_CharPos_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CharPos_PropSetInt32">
            <summary>Sets the shim of StreamReader.set_CharPos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CheckAsyncTaskInProgress">
            <summary>Sets the shim of StreamReader.CheckAsyncTaskInProgress()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CheckPreamble_PropGet">
            <summary>Sets the shim of StreamReader.get_CheckPreamble_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Close">
            <summary>Sets the shim of StreamReader.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CompressBufferInt32">
            <summary>Sets the shim of StreamReader.CompressBuffer(Int32 n)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CurrentEncodingGet">
            <summary>Sets the shim of StreamReader.get_CurrentEncoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Decoder_PropGet">
            <summary>Sets the shim of StreamReader.get_Decoder_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.DetectEncoding">
            <summary>Sets the shim of StreamReader.DetectEncoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.DetectEncoding_PropGet">
            <summary>Sets the shim of StreamReader.get_DetectEncoding_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.DiscardBufferedData">
            <summary>Sets the shim of StreamReader.DiscardBufferedData()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of StreamReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.EndOfStreamGet">
            <summary>Sets the shim of StreamReader.get_EndOfStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.InitStream">
            <summary>Sets the shim of StreamReader.Init(Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.InitStreamEncodingBooleanInt32Boolean">
            <summary>Sets the shim of StreamReader.Init(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean leaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.IsBlocked_PropGet">
            <summary>Sets the shim of StreamReader.get_IsBlocked_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.IsBlocked_PropSetBoolean">
            <summary>Sets the shim of StreamReader.set_IsBlocked_Prop(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.IsPreamble">
            <summary>Sets the shim of StreamReader.IsPreamble()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.LeaveOpenGet">
            <summary>Sets the shim of StreamReader.get_LeaveOpen()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.MaxCharsPerBuffer_PropGet">
            <summary>Sets the shim of StreamReader.get_MaxCharsPerBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Peek">
            <summary>Sets the shim of StreamReader.Peek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Preamble_PropGet">
            <summary>Sets the shim of StreamReader.get_Preamble_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Read">
            <summary>Sets the shim of StreamReader.Read()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadAsyncCharArrayInt32Int32">
            <summary>Sets the shim of StreamReader.ReadAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadAsyncInternalCharArrayInt32Int32">
            <summary>Sets the shim of StreamReader.ReadAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadBlockAsyncCharArrayInt32Int32">
            <summary>Sets the shim of StreamReader.ReadBlockAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadBlockCharArrayInt32Int32">
            <summary>Sets the shim of StreamReader.ReadBlock(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadBuffer">
            <summary>Sets the shim of StreamReader.ReadBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadBufferAsync">
            <summary>Sets the shim of StreamReader.ReadBufferAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadBufferCharArrayInt32Int32BooleanOut">
            <summary>Sets the shim of StreamReader.ReadBuffer(Char[] userBuffer, Int32 userOffset, Int32 desiredChars, Boolean&amp; readToUserBuffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadCharArrayInt32Int32">
            <summary>Sets the shim of StreamReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadLine">
            <summary>Sets the shim of StreamReader.ReadLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadLineAsync">
            <summary>Sets the shim of StreamReader.ReadLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadLineAsyncInternal">
            <summary>Sets the shim of StreamReader.ReadLineAsyncInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadToEnd">
            <summary>Sets the shim of StreamReader.ReadToEnd()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadToEndAsync">
            <summary>Sets the shim of StreamReader.ReadToEndAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadToEndAsyncInternal">
            <summary>Sets the shim of StreamReader.ReadToEndAsyncInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Stream_PropGet">
            <summary>Sets the shim of StreamReader.get_Stream_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.BaseStreamGet">
            <summary>Sets the shim of StreamReader.get_BaseStream()</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ByteBuffer_PropGet">
            <summary>Sets the shim of StreamReader.get_ByteBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ByteLen_PropGet">
            <summary>Sets the shim of StreamReader.get_ByteLen_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ByteLen_PropSetInt32">
            <summary>Sets the shim of StreamReader.set_ByteLen_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.BytePos_PropGet">
            <summary>Sets the shim of StreamReader.get_BytePos_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.BytePos_PropSetInt32">
            <summary>Sets the shim of StreamReader.set_BytePos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CharBuffer_PropGet">
            <summary>Sets the shim of StreamReader.get_CharBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CharLen_PropGet">
            <summary>Sets the shim of StreamReader.get_CharLen_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CharLen_PropSetInt32">
            <summary>Sets the shim of StreamReader.set_CharLen_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CharPos_PropGet">
            <summary>Sets the shim of StreamReader.get_CharPos_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CharPos_PropSetInt32">
            <summary>Sets the shim of StreamReader.set_CharPos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CheckAsyncTaskInProgress">
            <summary>Sets the shim of StreamReader.CheckAsyncTaskInProgress()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CheckPreamble_PropGet">
            <summary>Sets the shim of StreamReader.get_CheckPreamble_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Close">
            <summary>Sets the shim of StreamReader.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CompressBufferInt32">
            <summary>Sets the shim of StreamReader.CompressBuffer(Int32 n)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Constructor">
            <summary>Sets the shim of StreamReader.StreamReader()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStream">
            <summary>Sets the shim of StreamReader.StreamReader(Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStreamBoolean">
            <summary>Sets the shim of StreamReader.StreamReader(Stream stream, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStreamEncoding">
            <summary>Sets the shim of StreamReader.StreamReader(Stream stream, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStreamEncodingBoolean">
            <summary>Sets the shim of StreamReader.StreamReader(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStreamEncodingBooleanInt32">
            <summary>Sets the shim of StreamReader.StreamReader(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStreamEncodingBooleanInt32Boolean">
            <summary>Sets the shim of StreamReader.StreamReader(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean leaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorString">
            <summary>Sets the shim of StreamReader.StreamReader(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStringBoolean">
            <summary>Sets the shim of StreamReader.StreamReader(String path, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStringEncoding">
            <summary>Sets the shim of StreamReader.StreamReader(String path, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStringEncodingBoolean">
            <summary>Sets the shim of StreamReader.StreamReader(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStringEncodingBooleanInt32">
            <summary>Sets the shim of StreamReader.StreamReader(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStringEncodingBooleanInt32Boolean">
            <summary>Sets the shim of StreamReader.StreamReader(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CurrentEncodingGet">
            <summary>Sets the shim of StreamReader.get_CurrentEncoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Decoder_PropGet">
            <summary>Sets the shim of StreamReader.get_Decoder_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.DefaultBufferSizeGet">
            <summary>Sets the shim of StreamReader.get_DefaultBufferSize()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.DetectEncoding">
            <summary>Sets the shim of StreamReader.DetectEncoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.DetectEncoding_PropGet">
            <summary>Sets the shim of StreamReader.get_DetectEncoding_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.DiscardBufferedData">
            <summary>Sets the shim of StreamReader.DiscardBufferedData()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.DisposeBoolean">
            <summary>Sets the shim of StreamReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.EndOfStreamGet">
            <summary>Sets the shim of StreamReader.get_EndOfStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.InitStream">
            <summary>Sets the shim of StreamReader.Init(Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.InitStreamEncodingBooleanInt32Boolean">
            <summary>Sets the shim of StreamReader.Init(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean leaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.IsBlocked_PropGet">
            <summary>Sets the shim of StreamReader.get_IsBlocked_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.IsBlocked_PropSetBoolean">
            <summary>Sets the shim of StreamReader.set_IsBlocked_Prop(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.IsPreamble">
            <summary>Sets the shim of StreamReader.IsPreamble()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.LeaveOpenGet">
            <summary>Sets the shim of StreamReader.get_LeaveOpen()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.MaxCharsPerBuffer_PropGet">
            <summary>Sets the shim of StreamReader.get_MaxCharsPerBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Peek">
            <summary>Sets the shim of StreamReader.Peek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Preamble_PropGet">
            <summary>Sets the shim of StreamReader.get_Preamble_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Read">
            <summary>Sets the shim of StreamReader.Read()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadAsyncCharArrayInt32Int32">
            <summary>Sets the shim of StreamReader.ReadAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadAsyncInternalCharArrayInt32Int32">
            <summary>Sets the shim of StreamReader.ReadAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadBlockAsyncCharArrayInt32Int32">
            <summary>Sets the shim of StreamReader.ReadBlockAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadBlockCharArrayInt32Int32">
            <summary>Sets the shim of StreamReader.ReadBlock(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadBuffer">
            <summary>Sets the shim of StreamReader.ReadBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadBufferAsync">
            <summary>Sets the shim of StreamReader.ReadBufferAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadBufferCharArrayInt32Int32BooleanOut">
            <summary>Sets the shim of StreamReader.ReadBuffer(Char[] userBuffer, Int32 userOffset, Int32 desiredChars, Boolean&amp; readToUserBuffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadCharArrayInt32Int32">
            <summary>Sets the shim of StreamReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadLine">
            <summary>Sets the shim of StreamReader.ReadLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadLineAsync">
            <summary>Sets the shim of StreamReader.ReadLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadLineAsyncInternal">
            <summary>Sets the shim of StreamReader.ReadLineAsyncInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadToEnd">
            <summary>Sets the shim of StreamReader.ReadToEnd()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadToEndAsync">
            <summary>Sets the shim of StreamReader.ReadToEndAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadToEndAsyncInternal">
            <summary>Sets the shim of StreamReader.ReadToEndAsyncInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.StaticConstructor">
            <summary>Sets the shim of StreamReader.StreamReader()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Stream_PropGet">
            <summary>Sets the shim of StreamReader.get_Stream_Prop()</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStreamWriter">
            <summary>Shim type of System.IO.StreamWriter</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamWriter.#ctor(System.IO.StreamWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStreamWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.AutoFlushGet">
            <summary>Sets the shim of StreamWriter.get_AutoFlush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.AutoFlushSetBoolean">
            <summary>Sets the shim of StreamWriter.set_AutoFlush(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.BaseStreamGet">
            <summary>Sets the shim of StreamWriter.get_BaseStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.CharPos_PropSetInt32">
            <summary>Sets the shim of StreamWriter.set_CharPos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.CheckAsyncTaskInProgress">
            <summary>Sets the shim of StreamWriter.CheckAsyncTaskInProgress()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.Close">
            <summary>Sets the shim of StreamWriter.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.DisposeBoolean">
            <summary>Sets the shim of StreamWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.EncodingGet">
            <summary>Sets the shim of StreamWriter.get_Encoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.Flush">
            <summary>Sets the shim of StreamWriter.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.FlushAsync">
            <summary>Sets the shim of StreamWriter.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.FlushAsyncInternalBooleanBooleanCharArrayInt32">
            <summary>Sets the shim of StreamWriter.FlushAsyncInternal(Boolean flushStream, Boolean flushEncoder, Char[] sCharBuffer, Int32 sCharPos)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.FlushBooleanBoolean">
            <summary>Sets the shim of StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.HaveWrittenPreambleSetBoolean">
            <summary>Sets the shim of StreamWriter.set_HaveWrittenPreamble(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.HaveWrittenPreamble_PropSetBoolean">
            <summary>Sets the shim of StreamWriter.set_HaveWrittenPreamble_Prop(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.InitStreamEncodingInt32Boolean">
            <summary>Sets the shim of StreamWriter.Init(Stream streamArg, Encoding encodingArg, Int32 bufferSize, Boolean shouldLeaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.LeaveOpenGet">
            <summary>Sets the shim of StreamWriter.get_LeaveOpen()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteAsyncChar">
            <summary>Sets the shim of StreamWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteAsyncCharArrayInt32Int32">
            <summary>Sets the shim of StreamWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteAsyncString">
            <summary>Sets the shim of StreamWriter.WriteAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteChar">
            <summary>Sets the shim of StreamWriter.Write(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteCharArray">
            <summary>Sets the shim of StreamWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteCharArrayInt32Int32">
            <summary>Sets the shim of StreamWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteLineAsync">
            <summary>Sets the shim of StreamWriter.WriteLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteLineAsyncChar">
            <summary>Sets the shim of StreamWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteLineAsyncCharArrayInt32Int32">
            <summary>Sets the shim of StreamWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteLineAsyncString">
            <summary>Sets the shim of StreamWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteString">
            <summary>Sets the shim of StreamWriter.Write(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AutoFlushGet">
            <summary>Sets the shim of StreamWriter.get_AutoFlush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AutoFlushSetBoolean">
            <summary>Sets the shim of StreamWriter.set_AutoFlush(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.BaseStreamGet">
            <summary>Sets the shim of StreamWriter.get_BaseStream()</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.CharPos_PropSetInt32">
            <summary>Sets the shim of StreamWriter.set_CharPos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.CheckAsyncTaskInProgress">
            <summary>Sets the shim of StreamWriter.CheckAsyncTaskInProgress()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.Close">
            <summary>Sets the shim of StreamWriter.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.Constructor">
            <summary>Sets the shim of StreamWriter.StreamWriter()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStream">
            <summary>Sets the shim of StreamWriter.StreamWriter(Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStreamEncoding">
            <summary>Sets the shim of StreamWriter.StreamWriter(Stream stream, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStreamEncodingInt32">
            <summary>Sets the shim of StreamWriter.StreamWriter(Stream stream, Encoding encoding, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStreamEncodingInt32Boolean">
            <summary>Sets the shim of StreamWriter.StreamWriter(Stream stream, Encoding encoding, Int32 bufferSize, Boolean leaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorString">
            <summary>Sets the shim of StreamWriter.StreamWriter(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStringBoolean">
            <summary>Sets the shim of StreamWriter.StreamWriter(String path, Boolean append)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStringBooleanEncoding">
            <summary>Sets the shim of StreamWriter.StreamWriter(String path, Boolean append, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStringBooleanEncodingInt32">
            <summary>Sets the shim of StreamWriter.StreamWriter(String path, Boolean append, Encoding encoding, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStringBooleanEncodingInt32Boolean">
            <summary>Sets the shim of StreamWriter.StreamWriter(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.CreateFileStringBooleanBoolean">
            <summary>Sets the shim of StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.DisposeBoolean">
            <summary>Sets the shim of StreamWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.EncodingGet">
            <summary>Sets the shim of StreamWriter.get_Encoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.Flush">
            <summary>Sets the shim of StreamWriter.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.FlushAsync">
            <summary>Sets the shim of StreamWriter.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.FlushAsyncInternalBooleanBooleanCharArrayInt32">
            <summary>Sets the shim of StreamWriter.FlushAsyncInternal(Boolean flushStream, Boolean flushEncoder, Char[] sCharBuffer, Int32 sCharPos)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.FlushAsyncInternalStreamWriterBooleanBooleanCharArrayInt32BooleanEncodingEncoderByteArrayStream">
            <summary>Sets the shim of StreamWriter.FlushAsyncInternal(StreamWriter _this, Boolean flushStream, Boolean flushEncoder, Char[] charBuffer, Int32 charPos, Boolean haveWrittenPreamble, Encoding encoding, Encoder encoder, Byte[] byteBuffer, Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.FlushBooleanBoolean">
            <summary>Sets the shim of StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.HaveWrittenPreambleSetBoolean">
            <summary>Sets the shim of StreamWriter.set_HaveWrittenPreamble(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.HaveWrittenPreamble_PropSetBoolean">
            <summary>Sets the shim of StreamWriter.set_HaveWrittenPreamble_Prop(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.InitStreamEncodingInt32Boolean">
            <summary>Sets the shim of StreamWriter.Init(Stream streamArg, Encoding encodingArg, Int32 bufferSize, Boolean shouldLeaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.LeaveOpenGet">
            <summary>Sets the shim of StreamWriter.get_LeaveOpen()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.StaticConstructor">
            <summary>Sets the shim of StreamWriter.StreamWriter()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.UTF8NoBOMGet">
            <summary>Sets the shim of StreamWriter.get_UTF8NoBOM()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncChar">
            <summary>Sets the shim of StreamWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncCharArrayInt32Int32">
            <summary>Sets the shim of StreamWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncInternalStreamWriterCharArrayInt32Int32CharArrayInt32Int32CharArrayBooleanBoolean">
            <summary>Sets the shim of StreamWriter.WriteAsyncInternal(StreamWriter _this, Char[] buffer, Int32 index, Int32 count, Char[] charBuffer, Int32 charPos, Int32 charLen, Char[] coreNewLine, Boolean autoFlush, Boolean appendNewLine)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncInternalStreamWriterCharCharArrayInt32Int32CharArrayBooleanBoolean">
            <summary>Sets the shim of StreamWriter.WriteAsyncInternal(StreamWriter _this, Char value, Char[] charBuffer, Int32 charPos, Int32 charLen, Char[] coreNewLine, Boolean autoFlush, Boolean appendNewLine)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncInternalStreamWriterStringCharArrayInt32Int32CharArrayBooleanBoolean">
            <summary>Sets the shim of StreamWriter.WriteAsyncInternal(StreamWriter _this, String value, Char[] charBuffer, Int32 charPos, Int32 charLen, Char[] coreNewLine, Boolean autoFlush, Boolean appendNewLine)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncString">
            <summary>Sets the shim of StreamWriter.WriteAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteChar">
            <summary>Sets the shim of StreamWriter.Write(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteCharArray">
            <summary>Sets the shim of StreamWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteCharArrayInt32Int32">
            <summary>Sets the shim of StreamWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteLineAsync">
            <summary>Sets the shim of StreamWriter.WriteLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteLineAsyncChar">
            <summary>Sets the shim of StreamWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteLineAsyncCharArrayInt32Int32">
            <summary>Sets the shim of StreamWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteLineAsyncString">
            <summary>Sets the shim of StreamWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteString">
            <summary>Sets the shim of StreamWriter.Write(String value)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimTextReader">
            <summary>Shim type of System.IO.TextReader</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextReader.#ctor(System.IO.TextReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimTextReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.Close">
            <summary>Sets the shim of TextReader.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.Dispose">
            <summary>Sets the shim of TextReader.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of TextReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.Peek">
            <summary>Sets the shim of TextReader.Peek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.Read">
            <summary>Sets the shim of TextReader.Read()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadAsyncCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.ReadAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadAsyncInternalCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.ReadAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadBlockAsyncCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.ReadBlockAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadBlockAsyncInternalCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.ReadBlockAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadBlockCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.ReadBlock(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadLine">
            <summary>Sets the shim of TextReader.ReadLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadLineAsync">
            <summary>Sets the shim of TextReader.ReadLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadToEnd">
            <summary>Sets the shim of TextReader.ReadToEnd()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadToEndAsync">
            <summary>Sets the shim of TextReader.ReadToEndAsync()</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Close">
            <summary>Sets the shim of TextReader.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Constructor">
            <summary>Sets the shim of TextReader.TextReader()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Dispose">
            <summary>Sets the shim of TextReader.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.DisposeBoolean">
            <summary>Sets the shim of TextReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Peek">
            <summary>Sets the shim of TextReader.Peek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Read">
            <summary>Sets the shim of TextReader.Read()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadAsyncCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.ReadAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadAsyncInternalCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.ReadAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadBlockAsyncCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.ReadBlockAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadBlockAsyncInternalCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.ReadBlockAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadBlockCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.ReadBlock(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadCharArrayInt32Int32">
            <summary>Sets the shim of TextReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadLine">
            <summary>Sets the shim of TextReader.ReadLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadLineAsync">
            <summary>Sets the shim of TextReader.ReadLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadToEnd">
            <summary>Sets the shim of TextReader.ReadToEnd()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadToEndAsync">
            <summary>Sets the shim of TextReader.ReadToEndAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.StaticConstructor">
            <summary>Sets the shim of TextReader.TextReader()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.SynchronizedTextReader">
            <summary>Sets the shim of TextReader.Synchronized(TextReader reader)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimTextWriter">
            <summary>Shim type of System.IO.TextWriter</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextWriter.#ctor(System.IO.TextWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimTextWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.Close">
            <summary>Sets the shim of TextWriter.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.Dispose">
            <summary>Sets the shim of TextWriter.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.DisposeBoolean">
            <summary>Sets the shim of TextWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.Flush">
            <summary>Sets the shim of TextWriter.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.FlushAsync">
            <summary>Sets the shim of TextWriter.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.FormatProviderGet">
            <summary>Sets the shim of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.NewLineGet">
            <summary>Sets the shim of TextWriter.get_NewLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.NewLineSetString">
            <summary>Sets the shim of TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteAsyncChar">
            <summary>Sets the shim of TextWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteAsyncCharArray">
            <summary>Sets the shim of TextWriter.WriteAsync(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteAsyncCharArrayInt32Int32">
            <summary>Sets the shim of TextWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteAsyncString">
            <summary>Sets the shim of TextWriter.WriteAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteBoolean">
            <summary>Sets the shim of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteChar">
            <summary>Sets the shim of TextWriter.Write(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteCharArray">
            <summary>Sets the shim of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteCharArrayInt32Int32">
            <summary>Sets the shim of TextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteDecimal">
            <summary>Sets the shim of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteDouble">
            <summary>Sets the shim of TextWriter.Write(Double value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteInt32">
            <summary>Sets the shim of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteInt64">
            <summary>Sets the shim of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLine">
            <summary>Sets the shim of TextWriter.WriteLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineAsync">
            <summary>Sets the shim of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineAsyncChar">
            <summary>Sets the shim of TextWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineAsyncCharArray">
            <summary>Sets the shim of TextWriter.WriteLineAsync(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineAsyncCharArrayInt32Int32">
            <summary>Sets the shim of TextWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineAsyncString">
            <summary>Sets the shim of TextWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineBoolean">
            <summary>Sets the shim of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineChar">
            <summary>Sets the shim of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineCharArray">
            <summary>Sets the shim of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineCharArrayInt32Int32">
            <summary>Sets the shim of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineDecimal">
            <summary>Sets the shim of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineDouble">
            <summary>Sets the shim of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineInt32">
            <summary>Sets the shim of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineInt64">
            <summary>Sets the shim of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineObject">
            <summary>Sets the shim of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineSingle">
            <summary>Sets the shim of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineString">
            <summary>Sets the shim of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineStringObject">
            <summary>Sets the shim of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineStringObjectArray">
            <summary>Sets the shim of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineStringObjectObject">
            <summary>Sets the shim of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineStringObjectObjectObject">
            <summary>Sets the shim of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineUInt32">
            <summary>Sets the shim of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineUInt64">
            <summary>Sets the shim of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteObject">
            <summary>Sets the shim of TextWriter.Write(Object value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteSingle">
            <summary>Sets the shim of TextWriter.Write(Single value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteString">
            <summary>Sets the shim of TextWriter.Write(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteStringObject">
            <summary>Sets the shim of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteStringObjectArray">
            <summary>Sets the shim of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteStringObjectObject">
            <summary>Sets the shim of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteStringObjectObjectObject">
            <summary>Sets the shim of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteUInt32">
            <summary>Sets the shim of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteUInt64">
            <summary>Sets the shim of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.Close">
            <summary>Sets the shim of TextWriter.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.Constructor">
            <summary>Sets the shim of TextWriter.TextWriter()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.ConstructorIFormatProvider">
            <summary>Sets the shim of TextWriter.TextWriter(IFormatProvider formatProvider)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.Dispose">
            <summary>Sets the shim of TextWriter.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.DisposeBoolean">
            <summary>Sets the shim of TextWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.Flush">
            <summary>Sets the shim of TextWriter.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.FlushAsync">
            <summary>Sets the shim of TextWriter.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.FormatProviderGet">
            <summary>Sets the shim of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.NewLineGet">
            <summary>Sets the shim of TextWriter.get_NewLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.NewLineSetString">
            <summary>Sets the shim of TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.StaticConstructor">
            <summary>Sets the shim of TextWriter.TextWriter()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.SynchronizedTextWriter">
            <summary>Sets the shim of TextWriter.Synchronized(TextWriter writer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteAsyncChar">
            <summary>Sets the shim of TextWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteAsyncCharArray">
            <summary>Sets the shim of TextWriter.WriteAsync(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteAsyncCharArrayInt32Int32">
            <summary>Sets the shim of TextWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteAsyncString">
            <summary>Sets the shim of TextWriter.WriteAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteBoolean">
            <summary>Sets the shim of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteChar">
            <summary>Sets the shim of TextWriter.Write(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteCharArray">
            <summary>Sets the shim of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteCharArrayInt32Int32">
            <summary>Sets the shim of TextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteDecimal">
            <summary>Sets the shim of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteDouble">
            <summary>Sets the shim of TextWriter.Write(Double value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteInt32">
            <summary>Sets the shim of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteInt64">
            <summary>Sets the shim of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLine">
            <summary>Sets the shim of TextWriter.WriteLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineAsync">
            <summary>Sets the shim of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineAsyncChar">
            <summary>Sets the shim of TextWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineAsyncCharArray">
            <summary>Sets the shim of TextWriter.WriteLineAsync(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineAsyncCharArrayInt32Int32">
            <summary>Sets the shim of TextWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineAsyncString">
            <summary>Sets the shim of TextWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineBoolean">
            <summary>Sets the shim of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineChar">
            <summary>Sets the shim of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineCharArray">
            <summary>Sets the shim of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineCharArrayInt32Int32">
            <summary>Sets the shim of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineDecimal">
            <summary>Sets the shim of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineDouble">
            <summary>Sets the shim of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineInt32">
            <summary>Sets the shim of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineInt64">
            <summary>Sets the shim of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineObject">
            <summary>Sets the shim of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineSingle">
            <summary>Sets the shim of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineString">
            <summary>Sets the shim of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineStringObject">
            <summary>Sets the shim of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineStringObjectArray">
            <summary>Sets the shim of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineStringObjectObject">
            <summary>Sets the shim of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineStringObjectObjectObject">
            <summary>Sets the shim of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineUInt32">
            <summary>Sets the shim of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineUInt64">
            <summary>Sets the shim of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteObject">
            <summary>Sets the shim of TextWriter.Write(Object value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteSingle">
            <summary>Sets the shim of TextWriter.Write(Single value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteString">
            <summary>Sets the shim of TextWriter.Write(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteStringObject">
            <summary>Sets the shim of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteStringObjectArray">
            <summary>Sets the shim of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteStringObjectObject">
            <summary>Sets the shim of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteStringObjectObjectObject">
            <summary>Sets the shim of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteUInt32">
            <summary>Sets the shim of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteUInt64">
            <summary>Sets the shim of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimAbandonedMutexException">
            <summary>Shim type of System.Threading.AbandonedMutexException</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAbandonedMutexException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAbandonedMutexException.#ctor(System.Threading.AbandonedMutexException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimAbandonedMutexException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.AllInstances.MutexGet">
            <summary>Sets the shim of AbandonedMutexException.get_Mutex()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.AllInstances.MutexIndexGet">
            <summary>Sets the shim of AbandonedMutexException.get_MutexIndex()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.AllInstances.SetupExceptionInt32WaitHandle">
            <summary>Sets the shim of AbandonedMutexException.SetupException(Int32 location, WaitHandle handle)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAbandonedMutexException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAbandonedMutexException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAbandonedMutexException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.Constructor">
            <summary>Sets the shim of AbandonedMutexException.AbandonedMutexException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.ConstructorInt32WaitHandle">
            <summary>Sets the shim of AbandonedMutexException.AbandonedMutexException(Int32 location, WaitHandle handle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AbandonedMutexException.AbandonedMutexException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.ConstructorString">
            <summary>Sets the shim of AbandonedMutexException.AbandonedMutexException(String message)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.ConstructorStringException">
            <summary>Sets the shim of AbandonedMutexException.AbandonedMutexException(String message, Exception inner)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.ConstructorStringExceptionInt32WaitHandle">
            <summary>Sets the shim of AbandonedMutexException.AbandonedMutexException(String message, Exception inner, Int32 location, WaitHandle handle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.ConstructorStringInt32WaitHandle">
            <summary>Sets the shim of AbandonedMutexException.AbandonedMutexException(String message, Int32 location, WaitHandle handle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.MutexGet">
            <summary>Sets the shim of AbandonedMutexException.get_Mutex()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.MutexIndexGet">
            <summary>Sets the shim of AbandonedMutexException.get_MutexIndex()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAbandonedMutexException.SetupExceptionInt32WaitHandle">
            <summary>Sets the shim of AbandonedMutexException.SetupException(Int32 location, WaitHandle handle)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimAsyncFlowControl">
            <summary>Shim type of System.Threading.AsyncFlowControl</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAsyncFlowControl.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimAsyncFlowControl.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAsyncFlowControl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAsyncFlowControl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncFlowControl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncFlowControl.EqualityOpAsyncFlowControlAsyncFlowControl">
            <summary>Sets the shim of AsyncFlowControl.op_Equality(AsyncFlowControl a, AsyncFlowControl b)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncFlowControl.InequalityOpAsyncFlowControlAsyncFlowControl">
            <summary>Sets the shim of AsyncFlowControl.op_Inequality(AsyncFlowControl a, AsyncFlowControl b)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimAsyncLocal`1">
            <summary>Shim type of System.Threading.AsyncLocal`1</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAsyncLocal`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAsyncLocal`1.#ctor(System.Threading.AsyncLocal{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimAsyncLocal`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncLocal`1.AllInstances.SystemThreadingIAsyncLocalOnValueChangedObjectObjectBoolean">
            <summary>Sets the shim of AsyncLocal`1.System.Threading.IAsyncLocal.OnValueChanged(Object previousValueObj, Object currentValueObj, Boolean contextChanged)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncLocal`1.AllInstances.ValueGet">
            <summary>Sets the shim of AsyncLocal`1.get_Value()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncLocal`1.AllInstances.ValueSetT0">
            <summary>Sets the shim of AsyncLocal`1.set_Value(!0 value)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAsyncLocal`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAsyncLocal`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncLocal`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncLocal`1.Constructor">
            <summary>Sets the shim of AsyncLocal`1.AsyncLocal`1()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncLocal`1.ConstructorActionOfAsyncLocalValueChangedArgsOfT0">
            <summary>Sets the shim of AsyncLocal`1.AsyncLocal`1(Action`1&lt;AsyncLocalValueChangedArgs`1&lt;!0&gt;&gt; valueChangedHandler)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncLocal`1.SystemThreadingIAsyncLocalOnValueChangedObjectObjectBoolean">
            <summary>Sets the shim of AsyncLocal`1.System.Threading.IAsyncLocal.OnValueChanged(Object previousValueObj, Object currentValueObj, Boolean contextChanged)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncLocal`1.ValueGet">
            <summary>Sets the shim of AsyncLocal`1.get_Value()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncLocal`1.ValueSetT0">
            <summary>Sets the shim of AsyncLocal`1.set_Value(!0 value)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimAsyncLocalValueChangedArgs`1">
            <summary>Shim type of System.Threading.AsyncLocalValueChangedArgs`1</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAsyncLocalValueChangedArgs`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimAsyncLocalValueChangedArgs`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAsyncLocalValueChangedArgs`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAsyncLocalValueChangedArgs`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAsyncLocalValueChangedArgs`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimAutoResetEvent">
            <summary>Shim type of System.Threading.AutoResetEvent</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAutoResetEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAutoResetEvent.#ctor(System.Threading.AutoResetEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimAutoResetEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAutoResetEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAutoResetEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAutoResetEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimAutoResetEvent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimAutoResetEvent.ConstructorBoolean">
            <summary>Sets the shim of AutoResetEvent.AutoResetEvent(Boolean initialState)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimCancellationToken">
            <summary>Shim type of System.Threading.CancellationToken</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCancellationToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationToken.ActionToActionObjShuntObject">
            <summary>Sets the shim of CancellationToken.ActionToActionObjShunt(Object obj)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimCancellationToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCancellationToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCancellationToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationToken.EqualityOpCancellationTokenCancellationToken">
            <summary>Sets the shim of CancellationToken.op_Equality(CancellationToken left, CancellationToken right)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationToken.InequalityOpCancellationTokenCancellationToken">
            <summary>Sets the shim of CancellationToken.op_Inequality(CancellationToken left, CancellationToken right)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationToken.NoneGet">
            <summary>Sets the shim of CancellationToken.get_None()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationToken.StaticConstructor">
            <summary>Sets the shim of CancellationToken.CancellationToken()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationToken.ThrowObjectDisposedException">
            <summary>Sets the shim of CancellationToken.ThrowObjectDisposedException()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimCancellationTokenRegistration">
            <summary>Shim type of System.Threading.CancellationTokenRegistration</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCancellationTokenRegistration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimCancellationTokenRegistration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCancellationTokenRegistration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCancellationTokenRegistration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenRegistration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenRegistration.EqualityOpCancellationTokenRegistrationCancellationTokenRegistration">
            <summary>Sets the shim of CancellationTokenRegistration.op_Equality(CancellationTokenRegistration left, CancellationTokenRegistration right)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenRegistration.InequalityOpCancellationTokenRegistrationCancellationTokenRegistration">
            <summary>Sets the shim of CancellationTokenRegistration.op_Inequality(CancellationTokenRegistration left, CancellationTokenRegistration right)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimCancellationTokenSource">
            <summary>Shim type of System.Threading.CancellationTokenSource</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCancellationTokenSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCancellationTokenSource.#ctor(System.Threading.CancellationTokenSource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.CanBeCanceledGet">
            <summary>Sets the shim of CancellationTokenSource.get_CanBeCanceled()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.Cancel">
            <summary>Sets the shim of CancellationTokenSource.Cancel()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.CancelAfterInt32">
            <summary>Sets the shim of CancellationTokenSource.CancelAfter(Int32 millisecondsDelay)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.CancelAfterTimeSpan">
            <summary>Sets the shim of CancellationTokenSource.CancelAfter(TimeSpan delay)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.CancelBoolean">
            <summary>Sets the shim of CancellationTokenSource.Cancel(Boolean throwOnFirstException)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.CancellationCallbackCoreWork_OnSyncContextObject">
            <summary>Sets the shim of CancellationTokenSource.CancellationCallbackCoreWork_OnSyncContext(Object obj)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.Dispose">
            <summary>Sets the shim of CancellationTokenSource.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CancellationTokenSource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.ExecuteCallbackHandlersBoolean">
            <summary>Sets the shim of CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.InitializeWithTimerInt32">
            <summary>Sets the shim of CancellationTokenSource.InitializeWithTimer(Int32 millisecondsDelay)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.InternalRegisterActionOfObjectObjectSynchronizationContextExecutionContext">
            <summary>Sets the shim of CancellationTokenSource.InternalRegister(Action`1&lt;Object&gt; callback, Object stateForCallback, SynchronizationContext targetSyncContext, ExecutionContext executionContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.IsCancellationCompletedGet">
            <summary>Sets the shim of CancellationTokenSource.get_IsCancellationCompleted()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.IsCancellationRequestedGet">
            <summary>Sets the shim of CancellationTokenSource.get_IsCancellationRequested()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.IsDisposedGet">
            <summary>Sets the shim of CancellationTokenSource.get_IsDisposed()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.NotifyCancellationBoolean">
            <summary>Sets the shim of CancellationTokenSource.NotifyCancellation(Boolean throwOnFirstException)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.ThreadIDExecutingCallbacksGet">
            <summary>Sets the shim of CancellationTokenSource.get_ThreadIDExecutingCallbacks()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.ThreadIDExecutingCallbacksSetInt32">
            <summary>Sets the shim of CancellationTokenSource.set_ThreadIDExecutingCallbacks(Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.ThrowIfDisposed">
            <summary>Sets the shim of CancellationTokenSource.ThrowIfDisposed()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.TokenGet">
            <summary>Sets the shim of CancellationTokenSource.get_Token()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.AllInstances.WaitHandleGet">
            <summary>Sets the shim of CancellationTokenSource.get_WaitHandle()</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCancellationTokenSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCancellationTokenSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCancellationTokenSource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.CanBeCanceledGet">
            <summary>Sets the shim of CancellationTokenSource.get_CanBeCanceled()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.Cancel">
            <summary>Sets the shim of CancellationTokenSource.Cancel()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.CancelAfterInt32">
            <summary>Sets the shim of CancellationTokenSource.CancelAfter(Int32 millisecondsDelay)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.CancelAfterTimeSpan">
            <summary>Sets the shim of CancellationTokenSource.CancelAfter(TimeSpan delay)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.CancelBoolean">
            <summary>Sets the shim of CancellationTokenSource.Cancel(Boolean throwOnFirstException)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.CancellationCallbackCoreWork_OnSyncContextObject">
            <summary>Sets the shim of CancellationTokenSource.CancellationCallbackCoreWork_OnSyncContext(Object obj)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.Constructor">
            <summary>Sets the shim of CancellationTokenSource.CancellationTokenSource()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.ConstructorBoolean">
            <summary>Sets the shim of CancellationTokenSource.CancellationTokenSource(Boolean set)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.ConstructorInt32">
            <summary>Sets the shim of CancellationTokenSource.CancellationTokenSource(Int32 millisecondsDelay)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.ConstructorTimeSpan">
            <summary>Sets the shim of CancellationTokenSource.CancellationTokenSource(TimeSpan delay)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.CreateLinkedTokenSourceCancellationTokenArray">
            <summary>Sets the shim of CancellationTokenSource.CreateLinkedTokenSource(CancellationToken[] tokens)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.CreateLinkedTokenSourceCancellationTokenCancellationToken">
            <summary>Sets the shim of CancellationTokenSource.CreateLinkedTokenSource(CancellationToken token1, CancellationToken token2)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.Dispose">
            <summary>Sets the shim of CancellationTokenSource.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.DisposeBoolean">
            <summary>Sets the shim of CancellationTokenSource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.ExecuteCallbackHandlersBoolean">
            <summary>Sets the shim of CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.InitializeWithTimerInt32">
            <summary>Sets the shim of CancellationTokenSource.InitializeWithTimer(Int32 millisecondsDelay)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.InternalGetStaticSourceBoolean">
            <summary>Sets the shim of CancellationTokenSource.InternalGetStaticSource(Boolean set)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.InternalRegisterActionOfObjectObjectSynchronizationContextExecutionContext">
            <summary>Sets the shim of CancellationTokenSource.InternalRegister(Action`1&lt;Object&gt; callback, Object stateForCallback, SynchronizationContext targetSyncContext, ExecutionContext executionContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.IsCancellationCompletedGet">
            <summary>Sets the shim of CancellationTokenSource.get_IsCancellationCompleted()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.IsCancellationRequestedGet">
            <summary>Sets the shim of CancellationTokenSource.get_IsCancellationRequested()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.IsDisposedGet">
            <summary>Sets the shim of CancellationTokenSource.get_IsDisposed()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.LinkedTokenCancelDelegateObject">
            <summary>Sets the shim of CancellationTokenSource.LinkedTokenCancelDelegate(Object source)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.NotifyCancellationBoolean">
            <summary>Sets the shim of CancellationTokenSource.NotifyCancellation(Boolean throwOnFirstException)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.StaticConstructor">
            <summary>Sets the shim of CancellationTokenSource.CancellationTokenSource()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.ThreadIDExecutingCallbacksGet">
            <summary>Sets the shim of CancellationTokenSource.get_ThreadIDExecutingCallbacks()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.ThreadIDExecutingCallbacksSetInt32">
            <summary>Sets the shim of CancellationTokenSource.set_ThreadIDExecutingCallbacks(Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.ThrowIfDisposed">
            <summary>Sets the shim of CancellationTokenSource.ThrowIfDisposed()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.ThrowObjectDisposedException">
            <summary>Sets the shim of CancellationTokenSource.ThrowObjectDisposedException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.TimerCallbackLogicObject">
            <summary>Sets the shim of CancellationTokenSource.TimerCallbackLogic(Object obj)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.TokenGet">
            <summary>Sets the shim of CancellationTokenSource.get_Token()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCancellationTokenSource.WaitHandleGet">
            <summary>Sets the shim of CancellationTokenSource.get_WaitHandle()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimCompressedStack">
            <summary>Shim type of System.Threading.CompressedStack</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCompressedStack.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCompressedStack.#ctor(System.Threading.CompressedStack)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimCompressedStack.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.AllInstances.CanSkipEvaluationGet">
            <summary>Sets the shim of CompressedStack.get_CanSkipEvaluation()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.AllInstances.CanSkipEvaluationSetBoolean">
            <summary>Sets the shim of CompressedStack.set_CanSkipEvaluation(Boolean value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.AllInstances.CompleteConstructionCompressedStack">
            <summary>Sets the shim of CompressedStack.CompleteConstruction(CompressedStack innerCS)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.AllInstances.CreateCopy">
            <summary>Sets the shim of CompressedStack.CreateCopy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.AllInstances.DemandFlagsOrGrantSetInt32PermissionSet">
            <summary>Sets the shim of CompressedStack.DemandFlagsOrGrantSet(Int32 flags, PermissionSet grantSet)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of CompressedStack.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCompressedStack.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCompressedStack.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCompressedStack.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.CanSkipEvaluationGet">
            <summary>Sets the shim of CompressedStack.get_CanSkipEvaluation()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.CanSkipEvaluationSetBoolean">
            <summary>Sets the shim of CompressedStack.set_CanSkipEvaluation(Boolean value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.Capture">
            <summary>Sets the shim of CompressedStack.Capture()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.CompleteConstructionCompressedStack">
            <summary>Sets the shim of CompressedStack.CompleteConstruction(CompressedStack innerCS)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of CompressedStack.CompressedStack(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.CreateCopy">
            <summary>Sets the shim of CompressedStack.CreateCopy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.DemandFlagsOrGrantSetInt32PermissionSet">
            <summary>Sets the shim of CompressedStack.DemandFlagsOrGrantSet(Int32 flags, PermissionSet grantSet)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.GetCompressedStack">
            <summary>Sets the shim of CompressedStack.GetCompressedStack()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.GetCompressedStackThread">
            <summary>Sets the shim of CompressedStack.GetCompressedStackThread()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of CompressedStack.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.RestoreAppDomainStackIntPtr">
            <summary>Sets the shim of CompressedStack.RestoreAppDomainStack(IntPtr appDomainStack)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.RunCompressedStackContextCallbackObject">
            <summary>Sets the shim of CompressedStack.Run(CompressedStack compressedStack, ContextCallback callback, Object state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.SetAppDomainStackCompressedStack">
            <summary>Sets the shim of CompressedStack.SetAppDomainStack(CompressedStack cs)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.SetCompressedStackThreadCompressedStack">
            <summary>Sets the shim of CompressedStack.SetCompressedStackThread(CompressedStack cs)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.runFinallyCodeObjectBoolean">
            <summary>Sets the shim of CompressedStack.runFinallyCode(Object userData, Boolean exceptionThrown)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCompressedStack.runTryCodeObject">
            <summary>Sets the shim of CompressedStack.runTryCode(Object userData)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimCountdownEvent">
            <summary>Shim type of System.Threading.CountdownEvent</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCountdownEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCountdownEvent.#ctor(System.Threading.CountdownEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AddCount">
            <summary>Sets the shim of CountdownEvent.AddCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AddCountInt32">
            <summary>Sets the shim of CountdownEvent.AddCount(Int32 signalCount)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimCountdownEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.AddCount">
            <summary>Sets the shim of CountdownEvent.AddCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.AddCountInt32">
            <summary>Sets the shim of CountdownEvent.AddCount(Int32 signalCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.CurrentCountGet">
            <summary>Sets the shim of CountdownEvent.get_CurrentCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.Dispose">
            <summary>Sets the shim of CountdownEvent.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CountdownEvent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.InitialCountGet">
            <summary>Sets the shim of CountdownEvent.get_InitialCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.IsSetGet">
            <summary>Sets the shim of CountdownEvent.get_IsSet()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.Reset">
            <summary>Sets the shim of CountdownEvent.Reset()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.ResetInt32">
            <summary>Sets the shim of CountdownEvent.Reset(Int32 count)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.Signal">
            <summary>Sets the shim of CountdownEvent.Signal()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.SignalInt32">
            <summary>Sets the shim of CountdownEvent.Signal(Int32 signalCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.ThrowIfDisposed">
            <summary>Sets the shim of CountdownEvent.ThrowIfDisposed()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.TryAddCount">
            <summary>Sets the shim of CountdownEvent.TryAddCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.TryAddCountInt32">
            <summary>Sets the shim of CountdownEvent.TryAddCount(Int32 signalCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.Wait">
            <summary>Sets the shim of CountdownEvent.Wait()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.WaitCancellationToken">
            <summary>Sets the shim of CountdownEvent.Wait(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.WaitHandleGet">
            <summary>Sets the shim of CountdownEvent.get_WaitHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.WaitInt32">
            <summary>Sets the shim of CountdownEvent.Wait(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.WaitInt32CancellationToken">
            <summary>Sets the shim of CountdownEvent.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.WaitTimeSpan">
            <summary>Sets the shim of CountdownEvent.Wait(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.AllInstances.WaitTimeSpanCancellationToken">
            <summary>Sets the shim of CountdownEvent.Wait(TimeSpan timeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCountdownEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCountdownEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimCountdownEvent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.ConstructorInt32">
            <summary>Sets the shim of CountdownEvent.CountdownEvent(Int32 initialCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.CurrentCountGet">
            <summary>Sets the shim of CountdownEvent.get_CurrentCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.Dispose">
            <summary>Sets the shim of CountdownEvent.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.DisposeBoolean">
            <summary>Sets the shim of CountdownEvent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.InitialCountGet">
            <summary>Sets the shim of CountdownEvent.get_InitialCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.IsSetGet">
            <summary>Sets the shim of CountdownEvent.get_IsSet()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.Reset">
            <summary>Sets the shim of CountdownEvent.Reset()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.ResetInt32">
            <summary>Sets the shim of CountdownEvent.Reset(Int32 count)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.Signal">
            <summary>Sets the shim of CountdownEvent.Signal()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.SignalInt32">
            <summary>Sets the shim of CountdownEvent.Signal(Int32 signalCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.ThrowIfDisposed">
            <summary>Sets the shim of CountdownEvent.ThrowIfDisposed()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.TryAddCount">
            <summary>Sets the shim of CountdownEvent.TryAddCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.TryAddCountInt32">
            <summary>Sets the shim of CountdownEvent.TryAddCount(Int32 signalCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.Wait">
            <summary>Sets the shim of CountdownEvent.Wait()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.WaitCancellationToken">
            <summary>Sets the shim of CountdownEvent.Wait(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.WaitHandleGet">
            <summary>Sets the shim of CountdownEvent.get_WaitHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.WaitInt32">
            <summary>Sets the shim of CountdownEvent.Wait(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.WaitInt32CancellationToken">
            <summary>Sets the shim of CountdownEvent.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.WaitTimeSpan">
            <summary>Sets the shim of CountdownEvent.Wait(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimCountdownEvent.WaitTimeSpanCancellationToken">
            <summary>Sets the shim of CountdownEvent.Wait(TimeSpan timeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimEventWaitHandle">
            <summary>Shim type of System.Threading.EventWaitHandle</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimEventWaitHandle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimEventWaitHandle.#ctor(System.Threading.EventWaitHandle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimEventWaitHandle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.AllInstances.GetAccessControl">
            <summary>Sets the shim of EventWaitHandle.GetAccessControl()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.AllInstances.Reset">
            <summary>Sets the shim of EventWaitHandle.Reset()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.AllInstances.Set">
            <summary>Sets the shim of EventWaitHandle.Set()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.AllInstances.SetAccessControlEventWaitHandleSecurity">
            <summary>Sets the shim of EventWaitHandle.SetAccessControl(EventWaitHandleSecurity eventSecurity)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimEventWaitHandle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimEventWaitHandle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimEventWaitHandle.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.ConstructorBooleanEventResetMode">
            <summary>Sets the shim of EventWaitHandle.EventWaitHandle(Boolean initialState, EventResetMode mode)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.ConstructorBooleanEventResetModeString">
            <summary>Sets the shim of EventWaitHandle.EventWaitHandle(Boolean initialState, EventResetMode mode, String name)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.ConstructorBooleanEventResetModeStringBooleanOut">
            <summary>Sets the shim of EventWaitHandle.EventWaitHandle(Boolean initialState, EventResetMode mode, String name, Boolean&amp; createdNew)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.ConstructorBooleanEventResetModeStringBooleanOutEventWaitHandleSecurity">
            <summary>Sets the shim of EventWaitHandle.EventWaitHandle(Boolean initialState, EventResetMode mode, String name, Boolean&amp; createdNew, EventWaitHandleSecurity eventSecurity)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.ConstructorSafeWaitHandle">
            <summary>Sets the shim of EventWaitHandle.EventWaitHandle(SafeWaitHandle handle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.GetAccessControl">
            <summary>Sets the shim of EventWaitHandle.GetAccessControl()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.OpenExistingString">
            <summary>Sets the shim of EventWaitHandle.OpenExisting(String name)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.OpenExistingStringEventWaitHandleRights">
            <summary>Sets the shim of EventWaitHandle.OpenExisting(String name, EventWaitHandleRights rights)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.Reset">
            <summary>Sets the shim of EventWaitHandle.Reset()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.Set">
            <summary>Sets the shim of EventWaitHandle.Set()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.SetAccessControlEventWaitHandleSecurity">
            <summary>Sets the shim of EventWaitHandle.SetAccessControl(EventWaitHandleSecurity eventSecurity)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.TryOpenExistingStringEventWaitHandleOut">
            <summary>Sets the shim of EventWaitHandle.TryOpenExisting(String name, EventWaitHandle&amp; result)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimEventWaitHandle.TryOpenExistingStringEventWaitHandleRightsEventWaitHandleOut">
            <summary>Sets the shim of EventWaitHandle.TryOpenExisting(String name, EventWaitHandleRights rights, EventWaitHandle&amp; result)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimExecutionContext">
            <summary>Shim type of System.Threading.ExecutionContext</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimExecutionContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimExecutionContext.#ctor(System.Threading.ExecutionContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimExecutionContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.CreateCopy">
            <summary>Sets the shim of ExecutionContext.CreateCopy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.CreateMutableCopy">
            <summary>Sets the shim of ExecutionContext.CreateMutableCopy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.Dispose">
            <summary>Sets the shim of ExecutionContext.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ExecutionContext.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.HostExecutionContextGet">
            <summary>Sets the shim of ExecutionContext.get_HostExecutionContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.HostExecutionContextSetHostExecutionContext">
            <summary>Sets the shim of ExecutionContext.set_HostExecutionContext(HostExecutionContext value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.IsDefaultFTContextBoolean">
            <summary>Sets the shim of ExecutionContext.IsDefaultFTContext(Boolean ignoreSyncCtx)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.IsPreAllocatedDefaultGet">
            <summary>Sets the shim of ExecutionContext.get_IsPreAllocatedDefault()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.LogicalCallContextGet">
            <summary>Sets the shim of ExecutionContext.get_LogicalCallContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.LogicalCallContextSetLogicalCallContext">
            <summary>Sets the shim of ExecutionContext.set_LogicalCallContext(LogicalCallContext value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.SecurityContextGet">
            <summary>Sets the shim of ExecutionContext.get_SecurityContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.SecurityContextSetSecurityContext">
            <summary>Sets the shim of ExecutionContext.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.SynchronizationContextGet">
            <summary>Sets the shim of ExecutionContext.get_SynchronizationContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.SynchronizationContextNoFlowGet">
            <summary>Sets the shim of ExecutionContext.get_SynchronizationContextNoFlow()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.SynchronizationContextNoFlowSetSynchronizationContext">
            <summary>Sets the shim of ExecutionContext.set_SynchronizationContextNoFlow(SynchronizationContext value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.SynchronizationContextSetSynchronizationContext">
            <summary>Sets the shim of ExecutionContext.set_SynchronizationContext(SynchronizationContext value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.isFlowSuppressedGet">
            <summary>Sets the shim of ExecutionContext.get_isFlowSuppressed()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.isFlowSuppressedSetBoolean">
            <summary>Sets the shim of ExecutionContext.set_isFlowSuppressed(Boolean value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.isNewCaptureGet">
            <summary>Sets the shim of ExecutionContext.get_isNewCapture()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.AllInstances.isNewCaptureSetBoolean">
            <summary>Sets the shim of ExecutionContext.set_isNewCapture(Boolean value)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimExecutionContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimExecutionContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimExecutionContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimExecutionContext.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.Capture">
            <summary>Sets the shim of ExecutionContext.Capture()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.Constructor">
            <summary>Sets the shim of ExecutionContext.ExecutionContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.ConstructorBoolean">
            <summary>Sets the shim of ExecutionContext.ExecutionContext(Boolean isPreAllocatedDefault)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ExecutionContext.ExecutionContext(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.CreateCopy">
            <summary>Sets the shim of ExecutionContext.CreateCopy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.CreateMutableCopy">
            <summary>Sets the shim of ExecutionContext.CreateMutableCopy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.Dispose">
            <summary>Sets the shim of ExecutionContext.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.FastCapture">
            <summary>Sets the shim of ExecutionContext.FastCapture()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ExecutionContext.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.HostExecutionContextGet">
            <summary>Sets the shim of ExecutionContext.get_HostExecutionContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.HostExecutionContextSetHostExecutionContext">
            <summary>Sets the shim of ExecutionContext.set_HostExecutionContext(HostExecutionContext value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.IsDefaultFTContextBoolean">
            <summary>Sets the shim of ExecutionContext.IsDefaultFTContext(Boolean ignoreSyncCtx)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.IsFlowSuppressed">
            <summary>Sets the shim of ExecutionContext.IsFlowSuppressed()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.IsPreAllocatedDefaultGet">
            <summary>Sets the shim of ExecutionContext.get_IsPreAllocatedDefault()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.LogicalCallContextGet">
            <summary>Sets the shim of ExecutionContext.get_LogicalCallContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.LogicalCallContextSetLogicalCallContext">
            <summary>Sets the shim of ExecutionContext.set_LogicalCallContext(LogicalCallContext value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.OnAsyncLocalContextChangedExecutionContextExecutionContext">
            <summary>Sets the shim of ExecutionContext.OnAsyncLocalContextChanged(ExecutionContext previous, ExecutionContext current)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.PreAllocatedDefaultGet">
            <summary>Sets the shim of ExecutionContext.get_PreAllocatedDefault()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.RestoreFlow">
            <summary>Sets the shim of ExecutionContext.RestoreFlow()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.RunExecutionContextContextCallbackObject">
            <summary>Sets the shim of ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.RunExecutionContextContextCallbackObjectBoolean">
            <summary>Sets the shim of ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.RunInternalExecutionContextContextCallbackObjectBoolean">
            <summary>Sets the shim of ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.SecurityContextGet">
            <summary>Sets the shim of ExecutionContext.get_SecurityContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.SecurityContextSetSecurityContext">
            <summary>Sets the shim of ExecutionContext.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.StaticConstructor">
            <summary>Sets the shim of ExecutionContext.ExecutionContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.SuppressFlow">
            <summary>Sets the shim of ExecutionContext.SuppressFlow()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.SynchronizationContextGet">
            <summary>Sets the shim of ExecutionContext.get_SynchronizationContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.SynchronizationContextNoFlowGet">
            <summary>Sets the shim of ExecutionContext.get_SynchronizationContextNoFlow()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.SynchronizationContextNoFlowSetSynchronizationContext">
            <summary>Sets the shim of ExecutionContext.set_SynchronizationContextNoFlow(SynchronizationContext value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.SynchronizationContextSetSynchronizationContext">
            <summary>Sets the shim of ExecutionContext.set_SynchronizationContext(SynchronizationContext value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.isFlowSuppressedGet">
            <summary>Sets the shim of ExecutionContext.get_isFlowSuppressed()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.isFlowSuppressedSetBoolean">
            <summary>Sets the shim of ExecutionContext.set_isFlowSuppressed(Boolean value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.isNewCaptureGet">
            <summary>Sets the shim of ExecutionContext.get_isNewCapture()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimExecutionContext.isNewCaptureSetBoolean">
            <summary>Sets the shim of ExecutionContext.set_isNewCapture(Boolean value)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimHostExecutionContext">
            <summary>Shim type of System.Threading.HostExecutionContext</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimHostExecutionContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimHostExecutionContext.#ctor(System.Threading.HostExecutionContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimHostExecutionContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.AllInstances.CreateCopy">
            <summary>Sets the shim of HostExecutionContext.CreateCopy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.AllInstances.Dispose">
            <summary>Sets the shim of HostExecutionContext.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.AllInstances.DisposeBoolean">
            <summary>Sets the shim of HostExecutionContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.AllInstances.StateGet">
            <summary>Sets the shim of HostExecutionContext.get_State()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.AllInstances.StateSetObject">
            <summary>Sets the shim of HostExecutionContext.set_State(Object value)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimHostExecutionContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimHostExecutionContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimHostExecutionContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.Constructor">
            <summary>Sets the shim of HostExecutionContext.HostExecutionContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.ConstructorObject">
            <summary>Sets the shim of HostExecutionContext.HostExecutionContext(Object state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.CreateCopy">
            <summary>Sets the shim of HostExecutionContext.CreateCopy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.Dispose">
            <summary>Sets the shim of HostExecutionContext.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.DisposeBoolean">
            <summary>Sets the shim of HostExecutionContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.StateGet">
            <summary>Sets the shim of HostExecutionContext.get_State()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContext.StateSetObject">
            <summary>Sets the shim of HostExecutionContext.set_State(Object value)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimHostExecutionContextManager">
            <summary>Shim type of System.Threading.HostExecutionContextManager</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimHostExecutionContextManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimHostExecutionContextManager.#ctor(System.Threading.HostExecutionContextManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimHostExecutionContextManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.AllInstances.Capture">
            <summary>Sets the shim of HostExecutionContextManager.Capture()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.AllInstances.RevertObject">
            <summary>Sets the shim of HostExecutionContextManager.Revert(Object previousState)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.AllInstances.SetHostExecutionContextHostExecutionContext">
            <summary>Sets the shim of HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext hostExecutionContext)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimHostExecutionContextManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimHostExecutionContextManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.Capture">
            <summary>Sets the shim of HostExecutionContextManager.Capture()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.CaptureHostExecutionContext">
            <summary>Sets the shim of HostExecutionContextManager.CaptureHostExecutionContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.CheckIfHosted">
            <summary>Sets the shim of HostExecutionContextManager.CheckIfHosted()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.Constructor">
            <summary>Sets the shim of HostExecutionContextManager.HostExecutionContextManager()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.GetCurrentHostExecutionContextManager">
            <summary>Sets the shim of HostExecutionContextManager.GetCurrentHostExecutionContextManager()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.GetInternalHostExecutionContextManager">
            <summary>Sets the shim of HostExecutionContextManager.GetInternalHostExecutionContextManager()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.RevertObject">
            <summary>Sets the shim of HostExecutionContextManager.Revert(Object previousState)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.SetHostExecutionContextHostExecutionContext">
            <summary>Sets the shim of HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext hostExecutionContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimHostExecutionContextManager.SetHostExecutionContextInternalHostExecutionContext">
            <summary>Sets the shim of HostExecutionContextManager.SetHostExecutionContextInternal(HostExecutionContext hostContext)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimInterlocked">
            <summary>Shim type of System.Threading.Interlocked</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimInterlocked.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimInterlocked.AddInt32RefInt32">
            <summary>Sets the shim of Interlocked.Add(Int32&amp; location1, Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimInterlocked.AddInt64RefInt64">
            <summary>Sets the shim of Interlocked.Add(Int64&amp; location1, Int64 value)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimInterlocked.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimInterlocked.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimInterlocked.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimInterlocked.CompareExchangeOf1M0RefM0M0``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MscorlibDelegates.Ref0Func4{``0,``0,``0,``0})">
            <summary>Sets the shim of Interlocked.CompareExchange(!!0&amp; location1, !!0 value, !!0 comparand)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimInterlocked.DecrementInt32Ref">
            <summary>Sets the shim of Interlocked.Decrement(Int32&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimInterlocked.DecrementInt64Ref">
            <summary>Sets the shim of Interlocked.Decrement(Int64&amp; location)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimInterlocked.ExchangeOf1M0RefM0``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MscorlibDelegates.Ref0Func3{``0,``0,``0})">
            <summary>Sets the shim of Interlocked.Exchange(!!0&amp; location1, !!0 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimInterlocked.IncrementInt32Ref">
            <summary>Sets the shim of Interlocked.Increment(Int32&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimInterlocked.IncrementInt64Ref">
            <summary>Sets the shim of Interlocked.Increment(Int64&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimInterlocked.MemoryBarrier">
            <summary>Sets the shim of Interlocked.MemoryBarrier()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimInterlocked.ReadInt64Ref">
            <summary>Sets the shim of Interlocked.Read(Int64&amp; location)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimLazyInitializer">
            <summary>Shim type of System.Threading.LazyInitializer</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLazyInitializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLazyInitializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLazyInitializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimLazyInitializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLazyInitializer.EnsureInitializedCoreOf1M0RefBooleanRefObjectRefFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MscorlibDelegates.Ref0Ref1Ref2Func5{``0,System.Boolean,System.Object,System.Func{``0},``0})">
            <summary>Sets the shim of LazyInitializer.EnsureInitializedCore(!!0&amp; target, Boolean&amp; initialized, Object&amp; syncLock, Func`1&lt;!!0&gt; valueFactory)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLazyInitializer.EnsureInitializedCoreOf1M0RefFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MscorlibDelegates.Ref0Func3{``0,System.Func{``0},``0})">
            <summary>Sets the shim of LazyInitializer.EnsureInitializedCore(!!0&amp; target, Func`1&lt;!!0&gt; valueFactory)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLazyInitializer.EnsureInitializedOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,``0})">
            <summary>Sets the shim of LazyInitializer.EnsureInitialized(!!0&amp; target)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLazyInitializer.EnsureInitializedOf1M0RefBooleanRefObjectRef``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MscorlibDelegates.Ref0Ref1Ref2Func4{``0,System.Boolean,System.Object,``0})">
            <summary>Sets the shim of LazyInitializer.EnsureInitialized(!!0&amp; target, Boolean&amp; initialized, Object&amp; syncLock)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLazyInitializer.EnsureInitializedOf1M0RefBooleanRefObjectRefFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MscorlibDelegates.Ref0Ref1Ref2Func5{``0,System.Boolean,System.Object,System.Func{``0},``0})">
            <summary>Sets the shim of LazyInitializer.EnsureInitialized(!!0&amp; target, Boolean&amp; initialized, Object&amp; syncLock, Func`1&lt;!!0&gt; valueFactory)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLazyInitializer.EnsureInitializedOf1M0RefFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MscorlibDelegates.Ref0Func3{``0,System.Func{``0},``0})">
            <summary>Sets the shim of LazyInitializer.EnsureInitialized(!!0&amp; target, Func`1&lt;!!0&gt; valueFactory)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimLockCookie">
            <summary>Shim type of System.Threading.LockCookie</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLockCookie.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimLockCookie.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLockCookie.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLockCookie.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimLockCookie.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimLockCookie.EqualityOpLockCookieLockCookie">
            <summary>Sets the shim of LockCookie.op_Equality(LockCookie a, LockCookie b)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimLockCookie.InequalityOpLockCookieLockCookie">
            <summary>Sets the shim of LockCookie.op_Inequality(LockCookie a, LockCookie b)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimLockRecursionException">
            <summary>Shim type of System.Threading.LockRecursionException</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLockRecursionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLockRecursionException.#ctor(System.Threading.LockRecursionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimLockRecursionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLockRecursionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLockRecursionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimLockRecursionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimLockRecursionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimLockRecursionException.Constructor">
            <summary>Sets the shim of LockRecursionException.LockRecursionException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimLockRecursionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of LockRecursionException.LockRecursionException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimLockRecursionException.ConstructorString">
            <summary>Sets the shim of LockRecursionException.LockRecursionException(String message)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimLockRecursionException.ConstructorStringException">
            <summary>Sets the shim of LockRecursionException.LockRecursionException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimManualResetEvent">
            <summary>Shim type of System.Threading.ManualResetEvent</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimManualResetEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimManualResetEvent.#ctor(System.Threading.ManualResetEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimManualResetEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimManualResetEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimManualResetEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimManualResetEvent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEvent.ConstructorBoolean">
            <summary>Sets the shim of ManualResetEvent.ManualResetEvent(Boolean initialState)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimManualResetEventSlim">
            <summary>Shim type of System.Threading.ManualResetEventSlim</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimManualResetEventSlim.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimManualResetEventSlim.#ctor(System.Threading.ManualResetEventSlim)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.Dispose">
            <summary>Sets the shim of ManualResetEventSlim.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ManualResetEventSlim.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.EnsureLockObjectCreated">
            <summary>Sets the shim of ManualResetEventSlim.EnsureLockObjectCreated()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.InitializeBooleanInt32">
            <summary>Sets the shim of ManualResetEventSlim.Initialize(Boolean initialState, Int32 spinCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.IsSetGet">
            <summary>Sets the shim of ManualResetEventSlim.get_IsSet()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.IsSetSetBoolean">
            <summary>Sets the shim of ManualResetEventSlim.set_IsSet(Boolean value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.LazyInitializeEvent">
            <summary>Sets the shim of ManualResetEventSlim.LazyInitializeEvent()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.Reset">
            <summary>Sets the shim of ManualResetEventSlim.Reset()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.Set">
            <summary>Sets the shim of ManualResetEventSlim.Set()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.SetBoolean">
            <summary>Sets the shim of ManualResetEventSlim.Set(Boolean duringCancellation)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.SpinCountGet">
            <summary>Sets the shim of ManualResetEventSlim.get_SpinCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.SpinCountSetInt32">
            <summary>Sets the shim of ManualResetEventSlim.set_SpinCount(Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.ThrowIfDisposed">
            <summary>Sets the shim of ManualResetEventSlim.ThrowIfDisposed()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.UpdateStateAtomicallyInt32Int32">
            <summary>Sets the shim of ManualResetEventSlim.UpdateStateAtomically(Int32 newBits, Int32 updateBitsMask)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.Wait">
            <summary>Sets the shim of ManualResetEventSlim.Wait()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.WaitCancellationToken">
            <summary>Sets the shim of ManualResetEventSlim.Wait(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.WaitHandleGet">
            <summary>Sets the shim of ManualResetEventSlim.get_WaitHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.WaitInt32">
            <summary>Sets the shim of ManualResetEventSlim.Wait(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.WaitInt32CancellationToken">
            <summary>Sets the shim of ManualResetEventSlim.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.WaitTimeSpan">
            <summary>Sets the shim of ManualResetEventSlim.Wait(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.WaitTimeSpanCancellationToken">
            <summary>Sets the shim of ManualResetEventSlim.Wait(TimeSpan timeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.WaitersGet">
            <summary>Sets the shim of ManualResetEventSlim.get_Waiters()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.AllInstances.WaitersSetInt32">
            <summary>Sets the shim of ManualResetEventSlim.set_Waiters(Int32 value)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimManualResetEventSlim.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimManualResetEventSlim.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimManualResetEventSlim.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.CancellationTokenCallbackObject">
            <summary>Sets the shim of ManualResetEventSlim.CancellationTokenCallback(Object obj)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.Constructor">
            <summary>Sets the shim of ManualResetEventSlim.ManualResetEventSlim()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.ConstructorBoolean">
            <summary>Sets the shim of ManualResetEventSlim.ManualResetEventSlim(Boolean initialState)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.ConstructorBooleanInt32">
            <summary>Sets the shim of ManualResetEventSlim.ManualResetEventSlim(Boolean initialState, Int32 spinCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.Dispose">
            <summary>Sets the shim of ManualResetEventSlim.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.DisposeBoolean">
            <summary>Sets the shim of ManualResetEventSlim.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.EnsureLockObjectCreated">
            <summary>Sets the shim of ManualResetEventSlim.EnsureLockObjectCreated()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.ExtractStatePortionAndShiftRightInt32Int32Int32">
            <summary>Sets the shim of ManualResetEventSlim.ExtractStatePortionAndShiftRight(Int32 state, Int32 mask, Int32 rightBitShiftCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.ExtractStatePortionInt32Int32">
            <summary>Sets the shim of ManualResetEventSlim.ExtractStatePortion(Int32 state, Int32 mask)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.InitializeBooleanInt32">
            <summary>Sets the shim of ManualResetEventSlim.Initialize(Boolean initialState, Int32 spinCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.IsSetGet">
            <summary>Sets the shim of ManualResetEventSlim.get_IsSet()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.IsSetSetBoolean">
            <summary>Sets the shim of ManualResetEventSlim.set_IsSet(Boolean value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.LazyInitializeEvent">
            <summary>Sets the shim of ManualResetEventSlim.LazyInitializeEvent()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.Reset">
            <summary>Sets the shim of ManualResetEventSlim.Reset()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.Set">
            <summary>Sets the shim of ManualResetEventSlim.Set()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.SetBoolean">
            <summary>Sets the shim of ManualResetEventSlim.Set(Boolean duringCancellation)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.SpinCountGet">
            <summary>Sets the shim of ManualResetEventSlim.get_SpinCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.SpinCountSetInt32">
            <summary>Sets the shim of ManualResetEventSlim.set_SpinCount(Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.StaticConstructor">
            <summary>Sets the shim of ManualResetEventSlim.ManualResetEventSlim()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.ThrowIfDisposed">
            <summary>Sets the shim of ManualResetEventSlim.ThrowIfDisposed()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.UpdateStateAtomicallyInt32Int32">
            <summary>Sets the shim of ManualResetEventSlim.UpdateStateAtomically(Int32 newBits, Int32 updateBitsMask)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.Wait">
            <summary>Sets the shim of ManualResetEventSlim.Wait()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.WaitCancellationToken">
            <summary>Sets the shim of ManualResetEventSlim.Wait(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.WaitHandleGet">
            <summary>Sets the shim of ManualResetEventSlim.get_WaitHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.WaitInt32">
            <summary>Sets the shim of ManualResetEventSlim.Wait(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.WaitInt32CancellationToken">
            <summary>Sets the shim of ManualResetEventSlim.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.WaitTimeSpan">
            <summary>Sets the shim of ManualResetEventSlim.Wait(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.WaitTimeSpanCancellationToken">
            <summary>Sets the shim of ManualResetEventSlim.Wait(TimeSpan timeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.WaitersGet">
            <summary>Sets the shim of ManualResetEventSlim.get_Waiters()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimManualResetEventSlim.WaitersSetInt32">
            <summary>Sets the shim of ManualResetEventSlim.set_Waiters(Int32 value)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimMonitor">
            <summary>Shim type of System.Threading.Monitor</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimMonitor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimMonitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimMonitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.EnterObjectBooleanRef">
            <summary>Sets the shim of Monitor.Enter(Object obj, Boolean&amp; lockTaken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.IsEnteredObject">
            <summary>Sets the shim of Monitor.IsEntered(Object obj)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.MillisecondsTimeoutFromTimeSpanTimeSpan">
            <summary>Sets the shim of Monitor.MillisecondsTimeoutFromTimeSpan(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.PulseAllObject">
            <summary>Sets the shim of Monitor.PulseAll(Object obj)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.PulseObject">
            <summary>Sets the shim of Monitor.Pulse(Object obj)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.ThrowLockTakenException">
            <summary>Sets the shim of Monitor.ThrowLockTakenException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.TryEnterObject">
            <summary>Sets the shim of Monitor.TryEnter(Object obj)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.TryEnterObjectBooleanRef">
            <summary>Sets the shim of Monitor.TryEnter(Object obj, Boolean&amp; lockTaken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.TryEnterObjectInt32">
            <summary>Sets the shim of Monitor.TryEnter(Object obj, Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.TryEnterObjectInt32BooleanRef">
            <summary>Sets the shim of Monitor.TryEnter(Object obj, Int32 millisecondsTimeout, Boolean&amp; lockTaken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.TryEnterObjectTimeSpan">
            <summary>Sets the shim of Monitor.TryEnter(Object obj, TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.TryEnterObjectTimeSpanBooleanRef">
            <summary>Sets the shim of Monitor.TryEnter(Object obj, TimeSpan timeout, Boolean&amp; lockTaken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.WaitObject">
            <summary>Sets the shim of Monitor.Wait(Object obj)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.WaitObjectInt32">
            <summary>Sets the shim of Monitor.Wait(Object obj, Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.WaitObjectInt32Boolean">
            <summary>Sets the shim of Monitor.Wait(Object obj, Int32 millisecondsTimeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.WaitObjectTimeSpan">
            <summary>Sets the shim of Monitor.Wait(Object obj, TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMonitor.WaitObjectTimeSpanBoolean">
            <summary>Sets the shim of Monitor.Wait(Object obj, TimeSpan timeout, Boolean exitContext)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimMutex">
            <summary>Shim type of System.Threading.Mutex</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimMutex.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimMutex.#ctor(System.Threading.Mutex)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimMutex.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.AllInstances.GetAccessControl">
            <summary>Sets the shim of Mutex.GetAccessControl()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.AllInstances.MutexCleanupCodeObjectBoolean">
            <summary>Sets the shim of Mutex.MutexCleanupCode(Object userData, Boolean exceptionThrown)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.AllInstances.ReleaseMutex">
            <summary>Sets the shim of Mutex.ReleaseMutex()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.AllInstances.SetAccessControlMutexSecurity">
            <summary>Sets the shim of Mutex.SetAccessControl(MutexSecurity mutexSecurity)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimMutex.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimMutex.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimMutex.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.Constructor">
            <summary>Sets the shim of Mutex.Mutex()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.ConstructorBoolean">
            <summary>Sets the shim of Mutex.Mutex(Boolean initiallyOwned)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.ConstructorBooleanString">
            <summary>Sets the shim of Mutex.Mutex(Boolean initiallyOwned, String name)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.ConstructorBooleanStringBooleanOut">
            <summary>Sets the shim of Mutex.Mutex(Boolean initiallyOwned, String name, Boolean&amp; createdNew)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.ConstructorBooleanStringBooleanOutMutexSecurity">
            <summary>Sets the shim of Mutex.Mutex(Boolean initiallyOwned, String name, Boolean&amp; createdNew, MutexSecurity mutexSecurity)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.ConstructorSafeWaitHandle">
            <summary>Sets the shim of Mutex.Mutex(SafeWaitHandle handle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.GetAccessControl">
            <summary>Sets the shim of Mutex.GetAccessControl()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.MutexCleanupCodeObjectBoolean">
            <summary>Sets the shim of Mutex.MutexCleanupCode(Object userData, Boolean exceptionThrown)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.OpenExistingString">
            <summary>Sets the shim of Mutex.OpenExisting(String name)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.OpenExistingStringMutexRights">
            <summary>Sets the shim of Mutex.OpenExisting(String name, MutexRights rights)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.ReleaseMutex">
            <summary>Sets the shim of Mutex.ReleaseMutex()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.SetAccessControlMutexSecurity">
            <summary>Sets the shim of Mutex.SetAccessControl(MutexSecurity mutexSecurity)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.TryOpenExistingStringMutexOut">
            <summary>Sets the shim of Mutex.TryOpenExisting(String name, Mutex&amp; result)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimMutex.TryOpenExistingStringMutexRightsMutexOut">
            <summary>Sets the shim of Mutex.TryOpenExisting(String name, MutexRights rights, Mutex&amp; result)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimNativeOverlapped">
            <summary>Shim type of System.Threading.NativeOverlapped</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimNativeOverlapped.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimNativeOverlapped.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimNativeOverlapped.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimNativeOverlapped.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimNativeOverlapped.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimOverlapped">
            <summary>Shim type of System.Threading.Overlapped</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimOverlapped.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimOverlapped.#ctor(System.Threading.Overlapped)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimOverlapped.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AllInstances.AsyncResultGet">
            <summary>Sets the shim of Overlapped.get_AsyncResult()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AllInstances.AsyncResultSetIAsyncResult">
            <summary>Sets the shim of Overlapped.set_AsyncResult(IAsyncResult value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AllInstances.EventHandleGet">
            <summary>Sets the shim of Overlapped.get_EventHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AllInstances.EventHandleIntPtrGet">
            <summary>Sets the shim of Overlapped.get_EventHandleIntPtr()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AllInstances.EventHandleIntPtrSetIntPtr">
            <summary>Sets the shim of Overlapped.set_EventHandleIntPtr(IntPtr value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AllInstances.EventHandleSetInt32">
            <summary>Sets the shim of Overlapped.set_EventHandle(Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AllInstances.OffsetHighGet">
            <summary>Sets the shim of Overlapped.get_OffsetHigh()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AllInstances.OffsetHighSetInt32">
            <summary>Sets the shim of Overlapped.set_OffsetHigh(Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AllInstances.OffsetLowGet">
            <summary>Sets the shim of Overlapped.get_OffsetLow()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AllInstances.OffsetLowSetInt32">
            <summary>Sets the shim of Overlapped.set_OffsetLow(Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AllInstances.UserCallbackGet">
            <summary>Sets the shim of Overlapped.get_UserCallback()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AsyncResultGet">
            <summary>Sets the shim of Overlapped.get_AsyncResult()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.AsyncResultSetIAsyncResult">
            <summary>Sets the shim of Overlapped.set_AsyncResult(IAsyncResult value)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimOverlapped.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimOverlapped.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.Constructor">
            <summary>Sets the shim of Overlapped.Overlapped()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.ConstructorInt32Int32Int32IAsyncResult">
            <summary>Sets the shim of Overlapped.Overlapped(Int32 offsetLo, Int32 offsetHi, Int32 hEvent, IAsyncResult ar)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.ConstructorInt32Int32IntPtrIAsyncResult">
            <summary>Sets the shim of Overlapped.Overlapped(Int32 offsetLo, Int32 offsetHi, IntPtr hEvent, IAsyncResult ar)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.EventHandleGet">
            <summary>Sets the shim of Overlapped.get_EventHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.EventHandleIntPtrGet">
            <summary>Sets the shim of Overlapped.get_EventHandleIntPtr()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.EventHandleIntPtrSetIntPtr">
            <summary>Sets the shim of Overlapped.set_EventHandleIntPtr(IntPtr value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.EventHandleSetInt32">
            <summary>Sets the shim of Overlapped.set_EventHandle(Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.OffsetHighGet">
            <summary>Sets the shim of Overlapped.get_OffsetHigh()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.OffsetHighSetInt32">
            <summary>Sets the shim of Overlapped.set_OffsetHigh(Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.OffsetLowGet">
            <summary>Sets the shim of Overlapped.get_OffsetLow()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.OffsetLowSetInt32">
            <summary>Sets the shim of Overlapped.set_OffsetLow(Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.StaticConstructor">
            <summary>Sets the shim of Overlapped.Overlapped()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimOverlapped.UserCallbackGet">
            <summary>Sets the shim of Overlapped.get_UserCallback()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimReaderWriterLock">
            <summary>Shim type of System.Threading.ReaderWriterLock</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimReaderWriterLock.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimReaderWriterLock.#ctor(System.Threading.ReaderWriterLock)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AcquireReaderLockInt32">
            <summary>Sets the shim of ReaderWriterLock.AcquireReaderLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AcquireReaderLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLock.AcquireReaderLock(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AcquireWriterLockInt32">
            <summary>Sets the shim of ReaderWriterLock.AcquireWriterLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AcquireWriterLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLock.AcquireWriterLock(TimeSpan timeout)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimReaderWriterLock.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.AcquireReaderLockInt32">
            <summary>Sets the shim of ReaderWriterLock.AcquireReaderLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.AcquireReaderLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLock.AcquireReaderLock(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.AcquireWriterLockInt32">
            <summary>Sets the shim of ReaderWriterLock.AcquireWriterLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.AcquireWriterLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLock.AcquireWriterLock(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.DowngradeFromWriterLockLockCookieRef">
            <summary>Sets the shim of ReaderWriterLock.DowngradeFromWriterLock(LockCookie&amp; lockCookie)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.IsReaderLockHeldGet">
            <summary>Sets the shim of ReaderWriterLock.get_IsReaderLockHeld()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.IsWriterLockHeldGet">
            <summary>Sets the shim of ReaderWriterLock.get_IsWriterLockHeld()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.ReleaseLock">
            <summary>Sets the shim of ReaderWriterLock.ReleaseLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.ReleaseReaderLock">
            <summary>Sets the shim of ReaderWriterLock.ReleaseReaderLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.ReleaseWriterLock">
            <summary>Sets the shim of ReaderWriterLock.ReleaseWriterLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.RestoreLockLockCookieRef">
            <summary>Sets the shim of ReaderWriterLock.RestoreLock(LockCookie&amp; lockCookie)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.UpgradeToWriterLockInt32">
            <summary>Sets the shim of ReaderWriterLock.UpgradeToWriterLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.UpgradeToWriterLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLock.UpgradeToWriterLock(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.AllInstances.WriterSeqNumGet">
            <summary>Sets the shim of ReaderWriterLock.get_WriterSeqNum()</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimReaderWriterLock.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimReaderWriterLock.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.Constructor">
            <summary>Sets the shim of ReaderWriterLock.ReaderWriterLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.DowngradeFromWriterLockLockCookieRef">
            <summary>Sets the shim of ReaderWriterLock.DowngradeFromWriterLock(LockCookie&amp; lockCookie)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.IsReaderLockHeldGet">
            <summary>Sets the shim of ReaderWriterLock.get_IsReaderLockHeld()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.IsWriterLockHeldGet">
            <summary>Sets the shim of ReaderWriterLock.get_IsWriterLockHeld()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.ReleaseLock">
            <summary>Sets the shim of ReaderWriterLock.ReleaseLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.ReleaseReaderLock">
            <summary>Sets the shim of ReaderWriterLock.ReleaseReaderLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.ReleaseWriterLock">
            <summary>Sets the shim of ReaderWriterLock.ReleaseWriterLock()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.RestoreLockLockCookieRef">
            <summary>Sets the shim of ReaderWriterLock.RestoreLock(LockCookie&amp; lockCookie)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.UpgradeToWriterLockInt32">
            <summary>Sets the shim of ReaderWriterLock.UpgradeToWriterLock(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.UpgradeToWriterLockTimeSpan">
            <summary>Sets the shim of ReaderWriterLock.UpgradeToWriterLock(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimReaderWriterLock.WriterSeqNumGet">
            <summary>Sets the shim of ReaderWriterLock.get_WriterSeqNum()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimRegisteredWaitHandle">
            <summary>Shim type of System.Threading.RegisteredWaitHandle</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimRegisteredWaitHandle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimRegisteredWaitHandle.#ctor(System.Threading.RegisteredWaitHandle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimRegisteredWaitHandle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimRegisteredWaitHandle.AllInstances.SetHandleIntPtr">
            <summary>Sets the shim of RegisteredWaitHandle.SetHandle(IntPtr handle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimRegisteredWaitHandle.AllInstances.SetWaitObjectWaitHandle">
            <summary>Sets the shim of RegisteredWaitHandle.SetWaitObject(WaitHandle waitObject)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimRegisteredWaitHandle.AllInstances.UnregisterWaitHandle">
            <summary>Sets the shim of RegisteredWaitHandle.Unregister(WaitHandle waitObject)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimRegisteredWaitHandle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimRegisteredWaitHandle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimRegisteredWaitHandle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimRegisteredWaitHandle.Constructor">
            <summary>Sets the shim of RegisteredWaitHandle.RegisteredWaitHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimRegisteredWaitHandle.SetHandleIntPtr">
            <summary>Sets the shim of RegisteredWaitHandle.SetHandle(IntPtr handle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimRegisteredWaitHandle.SetWaitObjectWaitHandle">
            <summary>Sets the shim of RegisteredWaitHandle.SetWaitObject(WaitHandle waitObject)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimRegisteredWaitHandle.UnregisterWaitHandle">
            <summary>Sets the shim of RegisteredWaitHandle.Unregister(WaitHandle waitObject)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSemaphoreFullException">
            <summary>Shim type of System.Threading.SemaphoreFullException</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSemaphoreFullException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSemaphoreFullException.#ctor(System.Threading.SemaphoreFullException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSemaphoreFullException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSemaphoreFullException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSemaphoreFullException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreFullException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSemaphoreFullException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreFullException.Constructor">
            <summary>Sets the shim of SemaphoreFullException.SemaphoreFullException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreFullException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SemaphoreFullException.SemaphoreFullException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreFullException.ConstructorString">
            <summary>Sets the shim of SemaphoreFullException.SemaphoreFullException(String message)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreFullException.ConstructorStringException">
            <summary>Sets the shim of SemaphoreFullException.SemaphoreFullException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSemaphoreSlim">
            <summary>Shim type of System.Threading.SemaphoreSlim</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSemaphoreSlim.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSemaphoreSlim.#ctor(System.Threading.SemaphoreSlim)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.AvailableWaitHandleGet">
            <summary>Sets the shim of SemaphoreSlim.get_AvailableWaitHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.CheckDispose">
            <summary>Sets the shim of SemaphoreSlim.CheckDispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.CurrentCountGet">
            <summary>Sets the shim of SemaphoreSlim.get_CurrentCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.Dispose">
            <summary>Sets the shim of SemaphoreSlim.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SemaphoreSlim.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.Release">
            <summary>Sets the shim of SemaphoreSlim.Release()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.ReleaseInt32">
            <summary>Sets the shim of SemaphoreSlim.Release(Int32 releaseCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.Wait">
            <summary>Sets the shim of SemaphoreSlim.Wait()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitAsync">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitAsyncCancellationToken">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitAsyncInt32">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitAsyncInt32CancellationToken">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync(Int32 millisecondsTimeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitAsyncTimeSpan">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitAsyncTimeSpanCancellationToken">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync(TimeSpan timeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitCancellationToken">
            <summary>Sets the shim of SemaphoreSlim.Wait(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitInt32">
            <summary>Sets the shim of SemaphoreSlim.Wait(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitInt32CancellationToken">
            <summary>Sets the shim of SemaphoreSlim.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitTimeSpan">
            <summary>Sets the shim of SemaphoreSlim.Wait(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitTimeSpanCancellationToken">
            <summary>Sets the shim of SemaphoreSlim.Wait(TimeSpan timeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AllInstances.WaitUntilCountOrTimeoutInt32UInt32CancellationToken">
            <summary>Sets the shim of SemaphoreSlim.WaitUntilCountOrTimeout(Int32 millisecondsTimeout, UInt32 startTime, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.AvailableWaitHandleGet">
            <summary>Sets the shim of SemaphoreSlim.get_AvailableWaitHandle()</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSemaphoreSlim.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSemaphoreSlim.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSemaphoreSlim.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.CancellationTokenCanceledEventHandlerObject">
            <summary>Sets the shim of SemaphoreSlim.CancellationTokenCanceledEventHandler(Object obj)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.CheckDispose">
            <summary>Sets the shim of SemaphoreSlim.CheckDispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.ConstructorInt32">
            <summary>Sets the shim of SemaphoreSlim.SemaphoreSlim(Int32 initialCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.ConstructorInt32Int32">
            <summary>Sets the shim of SemaphoreSlim.SemaphoreSlim(Int32 initialCount, Int32 maxCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.CurrentCountGet">
            <summary>Sets the shim of SemaphoreSlim.get_CurrentCount()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.Dispose">
            <summary>Sets the shim of SemaphoreSlim.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.DisposeBoolean">
            <summary>Sets the shim of SemaphoreSlim.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.GetResourceStringString">
            <summary>Sets the shim of SemaphoreSlim.GetResourceString(String str)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.Release">
            <summary>Sets the shim of SemaphoreSlim.Release()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.ReleaseInt32">
            <summary>Sets the shim of SemaphoreSlim.Release(Int32 releaseCount)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.StaticConstructor">
            <summary>Sets the shim of SemaphoreSlim.SemaphoreSlim()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.Wait">
            <summary>Sets the shim of SemaphoreSlim.Wait()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitAsync">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitAsyncCancellationToken">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitAsyncInt32">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitAsyncInt32CancellationToken">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync(Int32 millisecondsTimeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitAsyncTimeSpan">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitAsyncTimeSpanCancellationToken">
            <summary>Sets the shim of SemaphoreSlim.WaitAsync(TimeSpan timeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitCancellationToken">
            <summary>Sets the shim of SemaphoreSlim.Wait(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitInt32">
            <summary>Sets the shim of SemaphoreSlim.Wait(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitInt32CancellationToken">
            <summary>Sets the shim of SemaphoreSlim.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitTimeSpan">
            <summary>Sets the shim of SemaphoreSlim.Wait(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitTimeSpanCancellationToken">
            <summary>Sets the shim of SemaphoreSlim.Wait(TimeSpan timeout, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSemaphoreSlim.WaitUntilCountOrTimeoutInt32UInt32CancellationToken">
            <summary>Sets the shim of SemaphoreSlim.WaitUntilCountOrTimeout(Int32 millisecondsTimeout, UInt32 startTime, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSpinLock">
            <summary>Shim type of System.Threading.SpinLock</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSpinLock.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSpinLock.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSpinLock.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSpinLock.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSpinLock.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSpinLock.StaticConstructor">
            <summary>Sets the shim of SpinLock.SpinLock()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSpinWait">
            <summary>Shim type of System.Threading.SpinWait</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSpinWait.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSpinWait.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSpinWait.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSpinWait.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSpinWait.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSpinWait.SpinUntilFuncOfBoolean">
            <summary>Sets the shim of SpinWait.SpinUntil(Func`1&lt;Boolean&gt; condition)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSpinWait.SpinUntilFuncOfBooleanInt32">
            <summary>Sets the shim of SpinWait.SpinUntil(Func`1&lt;Boolean&gt; condition, Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSpinWait.SpinUntilFuncOfBooleanTimeSpan">
            <summary>Sets the shim of SpinWait.SpinUntil(Func`1&lt;Boolean&gt; condition, TimeSpan timeout)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSynchronizationContext">
            <summary>Shim type of System.Threading.SynchronizationContext</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSynchronizationContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSynchronizationContext.#ctor(System.Threading.SynchronizationContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSynchronizationContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.AllInstances.CreateCopy">
            <summary>Sets the shim of SynchronizationContext.CreateCopy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.AllInstances.IsWaitNotificationRequired">
            <summary>Sets the shim of SynchronizationContext.IsWaitNotificationRequired()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.AllInstances.OperationCompleted">
            <summary>Sets the shim of SynchronizationContext.OperationCompleted()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.AllInstances.OperationStarted">
            <summary>Sets the shim of SynchronizationContext.OperationStarted()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.AllInstances.PostSendOrPostCallbackObject">
            <summary>Sets the shim of SynchronizationContext.Post(SendOrPostCallback d, Object state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.AllInstances.SendSendOrPostCallbackObject">
            <summary>Sets the shim of SynchronizationContext.Send(SendOrPostCallback d, Object state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.AllInstances.SetWaitNotificationRequired">
            <summary>Sets the shim of SynchronizationContext.SetWaitNotificationRequired()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.AllInstances.WaitIntPtrArrayBooleanInt32">
            <summary>Sets the shim of SynchronizationContext.Wait(IntPtr[] waitHandles, Boolean waitAll, Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSynchronizationContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSynchronizationContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.Constructor">
            <summary>Sets the shim of SynchronizationContext.SynchronizationContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.CreateCopy">
            <summary>Sets the shim of SynchronizationContext.CreateCopy()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.CurrentGet">
            <summary>Sets the shim of SynchronizationContext.get_Current()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.CurrentNoFlowGet">
            <summary>Sets the shim of SynchronizationContext.get_CurrentNoFlow()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.GetThreadLocalContext">
            <summary>Sets the shim of SynchronizationContext.GetThreadLocalContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.GetWinRTContext">
            <summary>Sets the shim of SynchronizationContext.GetWinRTContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.InvokeWaitMethodHelperSynchronizationContextIntPtrArrayBooleanInt32">
            <summary>Sets the shim of SynchronizationContext.InvokeWaitMethodHelper(SynchronizationContext syncContext, IntPtr[] waitHandles, Boolean waitAll, Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.IsWaitNotificationRequired">
            <summary>Sets the shim of SynchronizationContext.IsWaitNotificationRequired()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.OperationCompleted">
            <summary>Sets the shim of SynchronizationContext.OperationCompleted()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.OperationStarted">
            <summary>Sets the shim of SynchronizationContext.OperationStarted()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.PostSendOrPostCallbackObject">
            <summary>Sets the shim of SynchronizationContext.Post(SendOrPostCallback d, Object state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.SendSendOrPostCallbackObject">
            <summary>Sets the shim of SynchronizationContext.Send(SendOrPostCallback d, Object state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.SetSynchronizationContextSynchronizationContext">
            <summary>Sets the shim of SynchronizationContext.SetSynchronizationContext(SynchronizationContext syncContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.SetWaitNotificationRequired">
            <summary>Sets the shim of SynchronizationContext.SetWaitNotificationRequired()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationContext.WaitIntPtrArrayBooleanInt32">
            <summary>Sets the shim of SynchronizationContext.Wait(IntPtr[] waitHandles, Boolean waitAll, Int32 millisecondsTimeout)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSynchronizationLockException">
            <summary>Shim type of System.Threading.SynchronizationLockException</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSynchronizationLockException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSynchronizationLockException.#ctor(System.Threading.SynchronizationLockException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimSynchronizationLockException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSynchronizationLockException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSynchronizationLockException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationLockException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimSynchronizationLockException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationLockException.Constructor">
            <summary>Sets the shim of SynchronizationLockException.SynchronizationLockException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationLockException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SynchronizationLockException.SynchronizationLockException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationLockException.ConstructorString">
            <summary>Sets the shim of SynchronizationLockException.SynchronizationLockException(String message)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimSynchronizationLockException.ConstructorStringException">
            <summary>Sets the shim of SynchronizationLockException.SynchronizationLockException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThread">
            <summary>Shim type of System.Threading.Thread</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThread.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThread.#ctor(System.Threading.Thread)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.Abort">
            <summary>Sets the shim of Thread.Abort()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AbortObject">
            <summary>Sets the shim of Thread.Abort(Object stateInfo)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AbortReasonGet">
            <summary>Sets the shim of Thread.get_AbortReason()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AbortReasonSetObject">
            <summary>Sets the shim of Thread.set_AbortReason(Object value)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThread.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.Abort">
            <summary>Sets the shim of Thread.Abort()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.AbortObject">
            <summary>Sets the shim of Thread.Abort(Object stateInfo)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.AbortReasonGet">
            <summary>Sets the shim of Thread.get_AbortReason()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.AbortReasonSetObject">
            <summary>Sets the shim of Thread.set_AbortReason(Object value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.ApartmentStateGet">
            <summary>Sets the shim of Thread.get_ApartmentState()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.ApartmentStateSetApartmentState">
            <summary>Sets the shim of Thread.set_ApartmentState(ApartmentState value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.CurrentCultureGet">
            <summary>Sets the shim of Thread.get_CurrentCulture()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.CurrentCultureSetCultureInfo">
            <summary>Sets the shim of Thread.set_CurrentCulture(CultureInfo value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.CurrentUICultureGet">
            <summary>Sets the shim of Thread.get_CurrentUICulture()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.CurrentUICultureSetCultureInfo">
            <summary>Sets the shim of Thread.set_CurrentUICulture(CultureInfo value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.ExecutionContextBelongsToCurrentScopeGet">
            <summary>Sets the shim of Thread.get_ExecutionContextBelongsToCurrentScope()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.ExecutionContextBelongsToCurrentScopeSetBoolean">
            <summary>Sets the shim of Thread.set_ExecutionContextBelongsToCurrentScope(Boolean value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.ExecutionContextGet">
            <summary>Sets the shim of Thread.get_ExecutionContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.GetApartmentState">
            <summary>Sets the shim of Thread.GetApartmentState()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.GetCompressedStack">
            <summary>Sets the shim of Thread.GetCompressedStack()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.GetCurrentContextInternal">
            <summary>Sets the shim of Thread.GetCurrentContextInternal()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.GetCurrentCultureNoAppX">
            <summary>Sets the shim of Thread.GetCurrentCultureNoAppX()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.GetCurrentUICultureNoAppX">
            <summary>Sets the shim of Thread.GetCurrentUICultureNoAppX()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.GetHashCode01">
            <summary>Sets the shim of Thread.GetHashCode()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.GetMutableExecutionContext">
            <summary>Sets the shim of Thread.GetMutableExecutionContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.Interrupt">
            <summary>Sets the shim of Thread.Interrupt()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.IsBackgroundGet">
            <summary>Sets the shim of Thread.get_IsBackground()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.IsBackgroundSetBoolean">
            <summary>Sets the shim of Thread.set_IsBackground(Boolean value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.Join">
            <summary>Sets the shim of Thread.Join()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.JoinInt32">
            <summary>Sets the shim of Thread.Join(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.JoinTimeSpan">
            <summary>Sets the shim of Thread.Join(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.NameGet">
            <summary>Sets the shim of Thread.get_Name()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.NameSetString">
            <summary>Sets the shim of Thread.set_Name(String value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.PriorityGet">
            <summary>Sets the shim of Thread.get_Priority()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.PrioritySetThreadPriority">
            <summary>Sets the shim of Thread.set_Priority(ThreadPriority value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.Resume">
            <summary>Sets the shim of Thread.Resume()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.SetApartmentStateApartmentState">
            <summary>Sets the shim of Thread.SetApartmentState(ApartmentState state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.SetApartmentStateHelperApartmentStateBoolean">
            <summary>Sets the shim of Thread.SetApartmentStateHelper(ApartmentState state, Boolean fireMDAOnMismatch)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.SetCompressedStackCompressedStack">
            <summary>Sets the shim of Thread.SetCompressedStack(CompressedStack stack)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.SetExecutionContextExecutionContextBoolean">
            <summary>Sets the shim of Thread.SetExecutionContext(ExecutionContext value, Boolean belongsToCurrentScope)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.SetPrincipalInternalIPrincipal">
            <summary>Sets the shim of Thread.SetPrincipalInternal(IPrincipal principal)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.SetStartHelperDelegateInt32">
            <summary>Sets the shim of Thread.SetStartHelper(Delegate start, Int32 maxStackSize)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.Start">
            <summary>Sets the shim of Thread.Start()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.StartObject">
            <summary>Sets the shim of Thread.Start(Object parameter)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.Suspend">
            <summary>Sets the shim of Thread.Suspend()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.SystemRuntimeInteropServices_ThreadGetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Sets the shim of Thread.System.Runtime.InteropServices._Thread.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.SystemRuntimeInteropServices_ThreadGetTypeInfoCountUInt32Out">
            <summary>Sets the shim of Thread.System.Runtime.InteropServices._Thread.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.SystemRuntimeInteropServices_ThreadGetTypeInfoUInt32UInt32IntPtr">
            <summary>Sets the shim of Thread.System.Runtime.InteropServices._Thread.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.SystemRuntimeInteropServices_ThreadInvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Sets the shim of Thread.System.Runtime.InteropServices._Thread.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.ThreadStateGet">
            <summary>Sets the shim of Thread.get_ThreadState()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllInstances.TrySetApartmentStateApartmentState">
            <summary>Sets the shim of Thread.TrySetApartmentState(ApartmentState state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllocateDataSlot">
            <summary>Sets the shim of Thread.AllocateDataSlot()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AllocateNamedDataSlotString">
            <summary>Sets the shim of Thread.AllocateNamedDataSlot(String name)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.ApartmentStateGet">
            <summary>Sets the shim of Thread.get_ApartmentState()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.ApartmentStateSetApartmentState">
            <summary>Sets the shim of Thread.set_ApartmentState(ApartmentState value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AsyncLocalSetCurrentCultureAsyncLocalValueChangedArgsOfCultureInfo">
            <summary>Sets the shim of Thread.AsyncLocalSetCurrentCulture(AsyncLocalValueChangedArgs`1&lt;CultureInfo&gt; args)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.AsyncLocalSetCurrentUICultureAsyncLocalValueChangedArgsOfCultureInfo">
            <summary>Sets the shim of Thread.AsyncLocalSetCurrentUICulture(AsyncLocalValueChangedArgs`1&lt;CultureInfo&gt; args)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThread.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThread.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.ConstructorParameterizedThreadStart">
            <summary>Sets the shim of Thread.Thread(ParameterizedThreadStart start)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.ConstructorParameterizedThreadStartInt32">
            <summary>Sets the shim of Thread.Thread(ParameterizedThreadStart start, Int32 maxStackSize)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.ConstructorThreadStart">
            <summary>Sets the shim of Thread.Thread(ThreadStart start)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.ConstructorThreadStartInt32">
            <summary>Sets the shim of Thread.Thread(ThreadStart start, Int32 maxStackSize)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.CurrentContextGet">
            <summary>Sets the shim of Thread.get_CurrentContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.CurrentCultureGet">
            <summary>Sets the shim of Thread.get_CurrentCulture()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.CurrentCultureSetCultureInfo">
            <summary>Sets the shim of Thread.set_CurrentCulture(CultureInfo value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.CurrentPrincipalGet">
            <summary>Sets the shim of Thread.get_CurrentPrincipal()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.CurrentPrincipalSetIPrincipal">
            <summary>Sets the shim of Thread.set_CurrentPrincipal(IPrincipal value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.CurrentThreadGet">
            <summary>Sets the shim of Thread.get_CurrentThread()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.CurrentUICultureGet">
            <summary>Sets the shim of Thread.get_CurrentUICulture()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.CurrentUICultureSetCultureInfo">
            <summary>Sets the shim of Thread.set_CurrentUICulture(CultureInfo value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.ExecutionContextBelongsToCurrentScopeGet">
            <summary>Sets the shim of Thread.get_ExecutionContextBelongsToCurrentScope()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.ExecutionContextBelongsToCurrentScopeSetBoolean">
            <summary>Sets the shim of Thread.set_ExecutionContextBelongsToCurrentScope(Boolean value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.ExecutionContextGet">
            <summary>Sets the shim of Thread.get_ExecutionContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.FreeNamedDataSlotString">
            <summary>Sets the shim of Thread.FreeNamedDataSlot(String name)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.GetApartmentState">
            <summary>Sets the shim of Thread.GetApartmentState()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.GetCompressedStack">
            <summary>Sets the shim of Thread.GetCompressedStack()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.GetCurrentContextInternal">
            <summary>Sets the shim of Thread.GetCurrentContextInternal()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.GetCurrentCultureNoAppX">
            <summary>Sets the shim of Thread.GetCurrentCultureNoAppX()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.GetCurrentUICultureNoAppX">
            <summary>Sets the shim of Thread.GetCurrentUICultureNoAppX()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.GetDataLocalDataStoreSlot">
            <summary>Sets the shim of Thread.GetData(LocalDataStoreSlot slot)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.GetDomain">
            <summary>Sets the shim of Thread.GetDomain()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.GetDomainID">
            <summary>Sets the shim of Thread.GetDomainID()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.GetHashCode">
            <summary>Sets the shim of Thread.GetHashCode()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.GetMutableExecutionContext">
            <summary>Sets the shim of Thread.GetMutableExecutionContext()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.GetNamedDataSlotString">
            <summary>Sets the shim of Thread.GetNamedDataSlot(String name)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.Interrupt">
            <summary>Sets the shim of Thread.Interrupt()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.IsBackgroundGet">
            <summary>Sets the shim of Thread.get_IsBackground()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.IsBackgroundSetBoolean">
            <summary>Sets the shim of Thread.set_IsBackground(Boolean value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.Join">
            <summary>Sets the shim of Thread.Join()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.JoinInt32">
            <summary>Sets the shim of Thread.Join(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.JoinTimeSpan">
            <summary>Sets the shim of Thread.Join(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.NameGet">
            <summary>Sets the shim of Thread.get_Name()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.NameSetString">
            <summary>Sets the shim of Thread.set_Name(String value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.PriorityGet">
            <summary>Sets the shim of Thread.get_Priority()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.PrioritySetThreadPriority">
            <summary>Sets the shim of Thread.set_Priority(ThreadPriority value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.ResetAbort">
            <summary>Sets the shim of Thread.ResetAbort()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.Resume">
            <summary>Sets the shim of Thread.Resume()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SetApartmentStateApartmentState">
            <summary>Sets the shim of Thread.SetApartmentState(ApartmentState state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SetApartmentStateHelperApartmentStateBoolean">
            <summary>Sets the shim of Thread.SetApartmentStateHelper(ApartmentState state, Boolean fireMDAOnMismatch)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SetCompressedStackCompressedStack">
            <summary>Sets the shim of Thread.SetCompressedStack(CompressedStack stack)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SetDataLocalDataStoreSlotObject">
            <summary>Sets the shim of Thread.SetData(LocalDataStoreSlot slot, Object data)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SetExecutionContextExecutionContextBoolean">
            <summary>Sets the shim of Thread.SetExecutionContext(ExecutionContext value, Boolean belongsToCurrentScope)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SetPrincipalInternalIPrincipal">
            <summary>Sets the shim of Thread.SetPrincipalInternal(IPrincipal principal)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SetStartHelperDelegateInt32">
            <summary>Sets the shim of Thread.SetStartHelper(Delegate start, Int32 maxStackSize)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SleepInt32">
            <summary>Sets the shim of Thread.Sleep(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SleepTimeSpan">
            <summary>Sets the shim of Thread.Sleep(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SpinWaitInt32">
            <summary>Sets the shim of Thread.SpinWait(Int32 iterations)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.Start">
            <summary>Sets the shim of Thread.Start()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.StartObject">
            <summary>Sets the shim of Thread.Start(Object parameter)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.Suspend">
            <summary>Sets the shim of Thread.Suspend()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SystemRuntimeInteropServices_ThreadGetTypeInfoCountUInt32Out">
            <summary>Sets the shim of Thread.System.Runtime.InteropServices._Thread.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.SystemRuntimeInteropServices_ThreadGetTypeInfoUInt32UInt32IntPtr">
            <summary>Sets the shim of Thread.System.Runtime.InteropServices._Thread.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.ThreadStateGet">
            <summary>Sets the shim of Thread.get_ThreadState()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.TrySetApartmentStateApartmentState">
            <summary>Sets the shim of Thread.TrySetApartmentState(ApartmentState state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadByteRef">
            <summary>Sets the shim of Thread.VolatileRead(Byte&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadDoubleRef">
            <summary>Sets the shim of Thread.VolatileRead(Double&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadInt16Ref">
            <summary>Sets the shim of Thread.VolatileRead(Int16&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadInt32Ref">
            <summary>Sets the shim of Thread.VolatileRead(Int32&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadInt64Ref">
            <summary>Sets the shim of Thread.VolatileRead(Int64&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadIntPtrRef">
            <summary>Sets the shim of Thread.VolatileRead(IntPtr&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadObjectRef">
            <summary>Sets the shim of Thread.VolatileRead(Object&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadSByteRef">
            <summary>Sets the shim of Thread.VolatileRead(SByte&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadSingleRef">
            <summary>Sets the shim of Thread.VolatileRead(Single&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadUInt16Ref">
            <summary>Sets the shim of Thread.VolatileRead(UInt16&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadUInt32Ref">
            <summary>Sets the shim of Thread.VolatileRead(UInt32&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadUInt64Ref">
            <summary>Sets the shim of Thread.VolatileRead(UInt64&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileReadUIntPtrRef">
            <summary>Sets the shim of Thread.VolatileRead(UIntPtr&amp; address)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteByteRefByte">
            <summary>Sets the shim of Thread.VolatileWrite(Byte&amp; address, Byte value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteDoubleRefDouble">
            <summary>Sets the shim of Thread.VolatileWrite(Double&amp; address, Double value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteInt16RefInt16">
            <summary>Sets the shim of Thread.VolatileWrite(Int16&amp; address, Int16 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteInt32RefInt32">
            <summary>Sets the shim of Thread.VolatileWrite(Int32&amp; address, Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteInt64RefInt64">
            <summary>Sets the shim of Thread.VolatileWrite(Int64&amp; address, Int64 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteIntPtrRefIntPtr">
            <summary>Sets the shim of Thread.VolatileWrite(IntPtr&amp; address, IntPtr value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteObjectRefObject">
            <summary>Sets the shim of Thread.VolatileWrite(Object&amp; address, Object value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteSByteRefSByte">
            <summary>Sets the shim of Thread.VolatileWrite(SByte&amp; address, SByte value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteSingleRefSingle">
            <summary>Sets the shim of Thread.VolatileWrite(Single&amp; address, Single value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteUInt16RefUInt16">
            <summary>Sets the shim of Thread.VolatileWrite(UInt16&amp; address, UInt16 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteUInt32RefUInt32">
            <summary>Sets the shim of Thread.VolatileWrite(UInt32&amp; address, UInt32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteUInt64RefUInt64">
            <summary>Sets the shim of Thread.VolatileWrite(UInt64&amp; address, UInt64 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.VolatileWriteUIntPtrRefUIntPtr">
            <summary>Sets the shim of Thread.VolatileWrite(UIntPtr&amp; address, UIntPtr value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThread.Yield">
            <summary>Sets the shim of Thread.Yield()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThreadAbortException">
            <summary>Shim type of System.Threading.ThreadAbortException</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadAbortException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadAbortException.#ctor(System.Threading.ThreadAbortException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThreadAbortException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadAbortException.AllInstances.ExceptionStateGet">
            <summary>Sets the shim of ThreadAbortException.get_ExceptionState()</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadAbortException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadAbortException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadAbortException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadAbortException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadAbortException.Constructor">
            <summary>Sets the shim of ThreadAbortException.ThreadAbortException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadAbortException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ThreadAbortException.ThreadAbortException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadAbortException.ExceptionStateGet">
            <summary>Sets the shim of ThreadAbortException.get_ExceptionState()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThreadInterruptedException">
            <summary>Shim type of System.Threading.ThreadInterruptedException</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadInterruptedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadInterruptedException.#ctor(System.Threading.ThreadInterruptedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThreadInterruptedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadInterruptedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadInterruptedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadInterruptedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadInterruptedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadInterruptedException.Constructor">
            <summary>Sets the shim of ThreadInterruptedException.ThreadInterruptedException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadInterruptedException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ThreadInterruptedException.ThreadInterruptedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadInterruptedException.ConstructorString">
            <summary>Sets the shim of ThreadInterruptedException.ThreadInterruptedException(String message)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadInterruptedException.ConstructorStringException">
            <summary>Sets the shim of ThreadInterruptedException.ThreadInterruptedException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThreadLocal`1">
            <summary>Shim type of System.Threading.ThreadLocal`1</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadLocal`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadLocal`1.#ctor(System.Threading.ThreadLocal{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThreadLocal`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.Dispose">
            <summary>Sets the shim of ThreadLocal`1.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ThreadLocal`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.GetValueSlow">
            <summary>Sets the shim of ThreadLocal`1.GetValueSlow()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.GetValuesAsList">
            <summary>Sets the shim of ThreadLocal`1.GetValuesAsList()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.InitializeFuncOfT0Boolean">
            <summary>Sets the shim of ThreadLocal`1.Initialize(Func`1&lt;!0&gt; valueFactory, Boolean trackAllValues)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.IsValueCreatedGet">
            <summary>Sets the shim of ThreadLocal`1.get_IsValueCreated()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.ToString01">
            <summary>Sets the shim of ThreadLocal`1.ToString()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.ValueForDebugDisplayGet">
            <summary>Sets the shim of ThreadLocal`1.get_ValueForDebugDisplay()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.ValueGet">
            <summary>Sets the shim of ThreadLocal`1.get_Value()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.ValueSetT0">
            <summary>Sets the shim of ThreadLocal`1.set_Value(!0 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.ValuesCountForDebugDisplayGet">
            <summary>Sets the shim of ThreadLocal`1.get_ValuesCountForDebugDisplay()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.ValuesForDebugDisplayGet">
            <summary>Sets the shim of ThreadLocal`1.get_ValuesForDebugDisplay()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.AllInstances.ValuesGet">
            <summary>Sets the shim of ThreadLocal`1.get_Values()</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadLocal`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadLocal`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadLocal`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.Constructor">
            <summary>Sets the shim of ThreadLocal`1.ThreadLocal`1()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.ConstructorBoolean">
            <summary>Sets the shim of ThreadLocal`1.ThreadLocal`1(Boolean trackAllValues)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.ConstructorFuncOfT0">
            <summary>Sets the shim of ThreadLocal`1.ThreadLocal`1(Func`1&lt;!0&gt; valueFactory)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.ConstructorFuncOfT0Boolean">
            <summary>Sets the shim of ThreadLocal`1.ThreadLocal`1(Func`1&lt;!0&gt; valueFactory, Boolean trackAllValues)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.Dispose">
            <summary>Sets the shim of ThreadLocal`1.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.DisposeBoolean">
            <summary>Sets the shim of ThreadLocal`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.GetNewTableSizeInt32">
            <summary>Sets the shim of ThreadLocal`1.GetNewTableSize(Int32 minSize)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.GetValueSlow">
            <summary>Sets the shim of ThreadLocal`1.GetValueSlow()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.GetValuesAsList">
            <summary>Sets the shim of ThreadLocal`1.GetValuesAsList()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.InitializeFuncOfT0Boolean">
            <summary>Sets the shim of ThreadLocal`1.Initialize(Func`1&lt;!0&gt; valueFactory, Boolean trackAllValues)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.IsValueCreatedGet">
            <summary>Sets the shim of ThreadLocal`1.get_IsValueCreated()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.StaticConstructor">
            <summary>Sets the shim of ThreadLocal`1.ThreadLocal`1()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.ToString">
            <summary>Sets the shim of ThreadLocal`1.ToString()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.ValueForDebugDisplayGet">
            <summary>Sets the shim of ThreadLocal`1.get_ValueForDebugDisplay()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.ValueGet">
            <summary>Sets the shim of ThreadLocal`1.get_Value()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.ValueSetT0">
            <summary>Sets the shim of ThreadLocal`1.set_Value(!0 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.ValuesCountForDebugDisplayGet">
            <summary>Sets the shim of ThreadLocal`1.get_ValuesCountForDebugDisplay()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.ValuesForDebugDisplayGet">
            <summary>Sets the shim of ThreadLocal`1.get_ValuesForDebugDisplay()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadLocal`1.ValuesGet">
            <summary>Sets the shim of ThreadLocal`1.get_Values()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThreadPool">
            <summary>Shim type of System.Threading.ThreadPool</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadPool.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadPool.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadPool.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.BindHandleIntPtr">
            <summary>Sets the shim of ThreadPool.BindHandle(IntPtr osHandle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.BindHandleSafeHandle">
            <summary>Sets the shim of ThreadPool.BindHandle(SafeHandle osHandle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.EnsureVMInitialized">
            <summary>Sets the shim of ThreadPool.EnsureVMInitialized()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.GetAvailableThreadsInt32OutInt32Out">
            <summary>Sets the shim of ThreadPool.GetAvailableThreads(Int32&amp; workerThreads, Int32&amp; completionPortThreads)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.GetGloballyQueuedWorkItemsForDebugger">
            <summary>Sets the shim of ThreadPool.GetGloballyQueuedWorkItemsForDebugger()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.GetLocallyQueuedWorkItemsForDebugger">
            <summary>Sets the shim of ThreadPool.GetLocallyQueuedWorkItemsForDebugger()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.GetMaxThreadsInt32OutInt32Out">
            <summary>Sets the shim of ThreadPool.GetMaxThreads(Int32&amp; workerThreads, Int32&amp; completionPortThreads)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.GetMinThreadsInt32OutInt32Out">
            <summary>Sets the shim of ThreadPool.GetMinThreads(Int32&amp; workerThreads, Int32&amp; completionPortThreads)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.GetQueuedWorkItemsForDebugger">
            <summary>Sets the shim of ThreadPool.GetQueuedWorkItemsForDebugger()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.NotifyWorkItemProgress">
            <summary>Sets the shim of ThreadPool.NotifyWorkItemProgress()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.QueueUserWorkItemWaitCallback">
            <summary>Sets the shim of ThreadPool.QueueUserWorkItem(WaitCallback callBack)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.QueueUserWorkItemWaitCallbackObject">
            <summary>Sets the shim of ThreadPool.QueueUserWorkItem(WaitCallback callBack, Object state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.RegisterWaitForSingleObjectWaitHandleWaitOrTimerCallbackObjectInt32Boolean">
            <summary>Sets the shim of ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.RegisterWaitForSingleObjectWaitHandleWaitOrTimerCallbackObjectInt64Boolean">
            <summary>Sets the shim of ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int64 millisecondsTimeOutInterval, Boolean executeOnlyOnce)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.RegisterWaitForSingleObjectWaitHandleWaitOrTimerCallbackObjectTimeSpanBoolean">
            <summary>Sets the shim of ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, TimeSpan timeout, Boolean executeOnlyOnce)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.RegisterWaitForSingleObjectWaitHandleWaitOrTimerCallbackObjectUInt32Boolean">
            <summary>Sets the shim of ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.SetMaxThreadsInt32Int32">
            <summary>Sets the shim of ThreadPool.SetMaxThreads(Int32 workerThreads, Int32 completionPortThreads)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.SetMinThreadsInt32Int32">
            <summary>Sets the shim of ThreadPool.SetMinThreads(Int32 workerThreads, Int32 completionPortThreads)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.UnsafeQueueUserWorkItemWaitCallbackObject">
            <summary>Sets the shim of ThreadPool.UnsafeQueueUserWorkItem(WaitCallback callBack, Object state)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.UnsafeRegisterWaitForSingleObjectWaitHandleWaitOrTimerCallbackObjectInt32Boolean">
            <summary>Sets the shim of ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.UnsafeRegisterWaitForSingleObjectWaitHandleWaitOrTimerCallbackObjectInt64Boolean">
            <summary>Sets the shim of ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int64 millisecondsTimeOutInterval, Boolean executeOnlyOnce)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.UnsafeRegisterWaitForSingleObjectWaitHandleWaitOrTimerCallbackObjectTimeSpanBoolean">
            <summary>Sets the shim of ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, TimeSpan timeout, Boolean executeOnlyOnce)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadPool.UnsafeRegisterWaitForSingleObjectWaitHandleWaitOrTimerCallbackObjectUInt32Boolean">
            <summary>Sets the shim of ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThreadStartException">
            <summary>Shim type of System.Threading.ThreadStartException</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadStartException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadStartException.#ctor(System.Threading.ThreadStartException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThreadStartException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadStartException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadStartException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadStartException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadStartException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadStartException.Constructor">
            <summary>Sets the shim of ThreadStartException.ThreadStartException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadStartException.ConstructorException">
            <summary>Sets the shim of ThreadStartException.ThreadStartException(Exception reason)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadStartException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ThreadStartException.ThreadStartException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThreadStateException">
            <summary>Shim type of System.Threading.ThreadStateException</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadStateException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadStateException.#ctor(System.Threading.ThreadStateException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimThreadStateException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadStateException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadStateException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadStateException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimThreadStateException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadStateException.Constructor">
            <summary>Sets the shim of ThreadStateException.ThreadStateException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadStateException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ThreadStateException.ThreadStateException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadStateException.ConstructorString">
            <summary>Sets the shim of ThreadStateException.ThreadStateException(String message)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimThreadStateException.ConstructorStringException">
            <summary>Sets the shim of ThreadStateException.ThreadStateException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimTimeout">
            <summary>Shim type of System.Threading.Timeout</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimTimeout.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimTimeout.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimTimeout.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimeout.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimeout.StaticConstructor">
            <summary>Sets the shim of Timeout.Timeout()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimTimer">
            <summary>Shim type of System.Threading.Timer</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimTimer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimTimer.#ctor(System.Threading.Timer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimTimer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.AllInstances.ChangeInt32Int32">
            <summary>Sets the shim of Timer.Change(Int32 dueTime, Int32 period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.AllInstances.ChangeInt64Int64">
            <summary>Sets the shim of Timer.Change(Int64 dueTime, Int64 period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.AllInstances.ChangeTimeSpanTimeSpan">
            <summary>Sets the shim of Timer.Change(TimeSpan dueTime, TimeSpan period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.AllInstances.ChangeUInt32UInt32">
            <summary>Sets the shim of Timer.Change(UInt32 dueTime, UInt32 period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.AllInstances.Dispose">
            <summary>Sets the shim of Timer.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.AllInstances.DisposeWaitHandle">
            <summary>Sets the shim of Timer.Dispose(WaitHandle notifyObject)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.AllInstances.KeepRootedWhileScheduled">
            <summary>Sets the shim of Timer.KeepRootedWhileScheduled()</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimTimer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimTimer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimTimer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.ChangeInt32Int32">
            <summary>Sets the shim of Timer.Change(Int32 dueTime, Int32 period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.ChangeInt64Int64">
            <summary>Sets the shim of Timer.Change(Int64 dueTime, Int64 period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.ChangeTimeSpanTimeSpan">
            <summary>Sets the shim of Timer.Change(TimeSpan dueTime, TimeSpan period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.ChangeUInt32UInt32">
            <summary>Sets the shim of Timer.Change(UInt32 dueTime, UInt32 period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.ConstructorTimerCallback">
            <summary>Sets the shim of Timer.Timer(TimerCallback callback)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.ConstructorTimerCallbackObjectInt32Int32">
            <summary>Sets the shim of Timer.Timer(TimerCallback callback, Object state, Int32 dueTime, Int32 period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.ConstructorTimerCallbackObjectInt64Int64">
            <summary>Sets the shim of Timer.Timer(TimerCallback callback, Object state, Int64 dueTime, Int64 period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.ConstructorTimerCallbackObjectTimeSpanTimeSpan">
            <summary>Sets the shim of Timer.Timer(TimerCallback callback, Object state, TimeSpan dueTime, TimeSpan period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.ConstructorTimerCallbackObjectUInt32UInt32">
            <summary>Sets the shim of Timer.Timer(TimerCallback callback, Object state, UInt32 dueTime, UInt32 period)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.Dispose">
            <summary>Sets the shim of Timer.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.DisposeWaitHandle">
            <summary>Sets the shim of Timer.Dispose(WaitHandle notifyObject)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.KeepRootedWhileScheduled">
            <summary>Sets the shim of Timer.KeepRootedWhileScheduled()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.Pause">
            <summary>Sets the shim of Timer.Pause()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimTimer.Resume">
            <summary>Sets the shim of Timer.Resume()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimVolatile">
            <summary>Shim type of System.Threading.Volatile</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimVolatile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimVolatile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimVolatile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadBooleanRef">
            <summary>Sets the shim of Volatile.Read(Boolean&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadByteRef">
            <summary>Sets the shim of Volatile.Read(Byte&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadDoubleRef">
            <summary>Sets the shim of Volatile.Read(Double&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadInt16Ref">
            <summary>Sets the shim of Volatile.Read(Int16&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadInt32Ref">
            <summary>Sets the shim of Volatile.Read(Int32&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadInt64Ref">
            <summary>Sets the shim of Volatile.Read(Int64&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadIntPtrRef">
            <summary>Sets the shim of Volatile.Read(IntPtr&amp; location)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimVolatile.ReadOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,``0})">
            <summary>Sets the shim of Volatile.Read(!!0&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadSByteRef">
            <summary>Sets the shim of Volatile.Read(SByte&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadSingleRef">
            <summary>Sets the shim of Volatile.Read(Single&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadUInt16Ref">
            <summary>Sets the shim of Volatile.Read(UInt16&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadUInt32Ref">
            <summary>Sets the shim of Volatile.Read(UInt32&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadUInt64Ref">
            <summary>Sets the shim of Volatile.Read(UInt64&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.ReadUIntPtrRef">
            <summary>Sets the shim of Volatile.Read(UIntPtr&amp; location)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteBooleanRefBoolean">
            <summary>Sets the shim of Volatile.Write(Boolean&amp; location, Boolean value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteByteRefByte">
            <summary>Sets the shim of Volatile.Write(Byte&amp; location, Byte value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteDoubleRefDouble">
            <summary>Sets the shim of Volatile.Write(Double&amp; location, Double value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteInt16RefInt16">
            <summary>Sets the shim of Volatile.Write(Int16&amp; location, Int16 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteInt32RefInt32">
            <summary>Sets the shim of Volatile.Write(Int32&amp; location, Int32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteInt64RefInt64">
            <summary>Sets the shim of Volatile.Write(Int64&amp; location, Int64 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteIntPtrRefIntPtr">
            <summary>Sets the shim of Volatile.Write(IntPtr&amp; location, IntPtr value)</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimVolatile.WriteOf1M0RefM0``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MscorlibDelegates.Ref0Action2{``0,``0})">
            <summary>Sets the shim of Volatile.Write(!!0&amp; location, !!0 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteSByteRefSByte">
            <summary>Sets the shim of Volatile.Write(SByte&amp; location, SByte value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteSingleRefSingle">
            <summary>Sets the shim of Volatile.Write(Single&amp; location, Single value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteUInt16RefUInt16">
            <summary>Sets the shim of Volatile.Write(UInt16&amp; location, UInt16 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteUInt32RefUInt32">
            <summary>Sets the shim of Volatile.Write(UInt32&amp; location, UInt32 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteUInt64RefUInt64">
            <summary>Sets the shim of Volatile.Write(UInt64&amp; location, UInt64 value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimVolatile.WriteUIntPtrRefUIntPtr">
            <summary>Sets the shim of Volatile.Write(UIntPtr&amp; location, UIntPtr value)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimWaitHandle">
            <summary>Shim type of System.Threading.WaitHandle</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandle.#ctor(System.Threading.WaitHandle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimWaitHandle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.Close">
            <summary>Sets the shim of WaitHandle.Close()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.Dispose">
            <summary>Sets the shim of WaitHandle.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaitHandle.Dispose(Boolean explicitDisposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.HandleGet">
            <summary>Sets the shim of WaitHandle.get_Handle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.HandleSetIntPtr">
            <summary>Sets the shim of WaitHandle.set_Handle(IntPtr value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.Init">
            <summary>Sets the shim of WaitHandle.Init()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.SafeWaitHandleGet">
            <summary>Sets the shim of WaitHandle.get_SafeWaitHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.SafeWaitHandleSetSafeWaitHandle">
            <summary>Sets the shim of WaitHandle.set_SafeWaitHandle(SafeWaitHandle value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.SetHandleInternalSafeWaitHandle">
            <summary>Sets the shim of WaitHandle.SetHandleInternal(SafeWaitHandle handle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.WaitOne">
            <summary>Sets the shim of WaitHandle.WaitOne()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.WaitOneInt32">
            <summary>Sets the shim of WaitHandle.WaitOne(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.WaitOneInt32Boolean">
            <summary>Sets the shim of WaitHandle.WaitOne(Int32 millisecondsTimeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.WaitOneInt64Boolean">
            <summary>Sets the shim of WaitHandle.WaitOne(Int64 timeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.WaitOneTimeSpan">
            <summary>Sets the shim of WaitHandle.WaitOne(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.WaitOneTimeSpanBoolean">
            <summary>Sets the shim of WaitHandle.WaitOne(TimeSpan timeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.AllInstances.WaitOneWithoutFAS">
            <summary>Sets the shim of WaitHandle.WaitOneWithoutFAS()</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandle.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.Close">
            <summary>Sets the shim of WaitHandle.Close()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.Constructor">
            <summary>Sets the shim of WaitHandle.WaitHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.Dispose">
            <summary>Sets the shim of WaitHandle.Dispose()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.DisposeBoolean">
            <summary>Sets the shim of WaitHandle.Dispose(Boolean explicitDisposing)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.GetInvalidHandle">
            <summary>Sets the shim of WaitHandle.GetInvalidHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.HandleGet">
            <summary>Sets the shim of WaitHandle.get_Handle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.HandleSetIntPtr">
            <summary>Sets the shim of WaitHandle.set_Handle(IntPtr value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.Init">
            <summary>Sets the shim of WaitHandle.Init()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.InternalWaitOneSafeHandleInt64BooleanBoolean">
            <summary>Sets the shim of WaitHandle.InternalWaitOne(SafeHandle waitableSafeHandle, Int64 millisecondsTimeout, Boolean hasThreadAffinity, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.SafeWaitHandleGet">
            <summary>Sets the shim of WaitHandle.get_SafeWaitHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.SafeWaitHandleSetSafeWaitHandle">
            <summary>Sets the shim of WaitHandle.set_SafeWaitHandle(SafeWaitHandle value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.SetHandleInternalSafeWaitHandle">
            <summary>Sets the shim of WaitHandle.SetHandleInternal(SafeWaitHandle handle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.SignalAndWaitWaitHandleWaitHandle">
            <summary>Sets the shim of WaitHandle.SignalAndWait(WaitHandle toSignal, WaitHandle toWaitOn)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.SignalAndWaitWaitHandleWaitHandleInt32Boolean">
            <summary>Sets the shim of WaitHandle.SignalAndWait(WaitHandle toSignal, WaitHandle toWaitOn, Int32 millisecondsTimeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.SignalAndWaitWaitHandleWaitHandleTimeSpanBoolean">
            <summary>Sets the shim of WaitHandle.SignalAndWait(WaitHandle toSignal, WaitHandle toWaitOn, TimeSpan timeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.StaticConstructor">
            <summary>Sets the shim of WaitHandle.WaitHandle()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.ThrowAbandonedMutexException">
            <summary>Sets the shim of WaitHandle.ThrowAbandonedMutexException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.ThrowAbandonedMutexExceptionInt32WaitHandle">
            <summary>Sets the shim of WaitHandle.ThrowAbandonedMutexException(Int32 location, WaitHandle handle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitAllWaitHandleArray">
            <summary>Sets the shim of WaitHandle.WaitAll(WaitHandle[] waitHandles)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitAllWaitHandleArrayInt32">
            <summary>Sets the shim of WaitHandle.WaitAll(WaitHandle[] waitHandles, Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitAllWaitHandleArrayInt32Boolean">
            <summary>Sets the shim of WaitHandle.WaitAll(WaitHandle[] waitHandles, Int32 millisecondsTimeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitAllWaitHandleArrayTimeSpan">
            <summary>Sets the shim of WaitHandle.WaitAll(WaitHandle[] waitHandles, TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitAllWaitHandleArrayTimeSpanBoolean">
            <summary>Sets the shim of WaitHandle.WaitAll(WaitHandle[] waitHandles, TimeSpan timeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitAnyWaitHandleArray">
            <summary>Sets the shim of WaitHandle.WaitAny(WaitHandle[] waitHandles)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitAnyWaitHandleArrayInt32">
            <summary>Sets the shim of WaitHandle.WaitAny(WaitHandle[] waitHandles, Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitAnyWaitHandleArrayInt32Boolean">
            <summary>Sets the shim of WaitHandle.WaitAny(WaitHandle[] waitHandles, Int32 millisecondsTimeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitAnyWaitHandleArrayTimeSpan">
            <summary>Sets the shim of WaitHandle.WaitAny(WaitHandle[] waitHandles, TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitAnyWaitHandleArrayTimeSpanBoolean">
            <summary>Sets the shim of WaitHandle.WaitAny(WaitHandle[] waitHandles, TimeSpan timeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitOne">
            <summary>Sets the shim of WaitHandle.WaitOne()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitOneInt32">
            <summary>Sets the shim of WaitHandle.WaitOne(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitOneInt32Boolean">
            <summary>Sets the shim of WaitHandle.WaitOne(Int32 millisecondsTimeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitOneInt64Boolean">
            <summary>Sets the shim of WaitHandle.WaitOne(Int64 timeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitOneTimeSpan">
            <summary>Sets the shim of WaitHandle.WaitOne(TimeSpan timeout)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitOneTimeSpanBoolean">
            <summary>Sets the shim of WaitHandle.WaitOne(TimeSpan timeout, Boolean exitContext)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandle.WaitOneWithoutFAS">
            <summary>Sets the shim of WaitHandle.WaitOneWithoutFAS()</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException">
            <summary>Shim type of System.Threading.WaitHandleCannotBeOpenedException</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException.#ctor(System.Threading.WaitHandleCannotBeOpenedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException.Constructor">
            <summary>Sets the shim of WaitHandleCannotBeOpenedException.WaitHandleCannotBeOpenedException()</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of WaitHandleCannotBeOpenedException.WaitHandleCannotBeOpenedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException.ConstructorString">
            <summary>Sets the shim of WaitHandleCannotBeOpenedException.WaitHandleCannotBeOpenedException(String message)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandleCannotBeOpenedException.ConstructorStringException">
            <summary>Sets the shim of WaitHandleCannotBeOpenedException.WaitHandleCannotBeOpenedException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Threading.Fakes.ShimWaitHandleExtensions">
            <summary>Shim type of System.Threading.WaitHandleExtensions</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandleExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandleExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Threading.Fakes.ShimWaitHandleExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandleExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandleExtensions.GetSafeWaitHandleWaitHandle">
            <summary>Sets the shim of WaitHandleExtensions.GetSafeWaitHandle(WaitHandle waitHandle)</summary>
        </member>
        <member name="P:System.Threading.Fakes.ShimWaitHandleExtensions.SetSafeWaitHandleWaitHandleSafeWaitHandle">
            <summary>Sets the shim of WaitHandleExtensions.SetSafeWaitHandle(WaitHandle waitHandle, SafeWaitHandle value)</summary>
        </member>
    </members>
</doc>
